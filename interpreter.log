Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: aboba
Advancing tokens from: 26 and 30
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Advanced to: 22 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 7
Advancing tokens from: 22 and 7
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Advanced to: 22 and 7
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 8
Advancing tokens from: 22 and 7
Advanced to: 7 and 20
Advancing tokens from: 7 and 20
Advanced to: 20 and 22
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 22
Advanced to: 22 and 9
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 10
Advancing tokens from: 22 and 9
Advanced to: 9 and 22
Advancing tokens from: 9 and 22
Advanced to: 22 and 21
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 21
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Advanced to: 26 and 30
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: aboba
Advancing tokens from: 26 and 30
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: aboba
Advancing tokens from: 26 and 7
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Advanced to: 22 and 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 3
Advanced to: 3 and 22
Statement parsed, current token: 3
Parsing next statement
Parsing statement, current token: 3, peek token: 22
Found if statement
Parsing if statement
Advancing tokens from: 3 and 22
Advanced to: 22 and 25
Parsing if condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 25
Advanced to: 25 and 26
Advancing tokens from: 25 and 26
Advanced to: 26 and 30
Parsing if body
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: aboba
Advancing tokens from: 26 and 30
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Advanced to: 22 and 8
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 8
Advanced to: 8 and 26
Advancing tokens from: 8 and 26
Advanced to: 26 and 5
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: aboba
Advancing tokens from: 26 and 5
Advanced to: 5 and 26
Parsing else-if clauses
Parsing else clause
Advancing tokens from: 5 and 26
Advanced to: 26 and 30
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: aboba
Advancing tokens from: 26 and 30
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: aboba
Advancing tokens from: 26 and 7
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Advanced to: 22 and 31
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 31
Advanced to: 31 and 26
Advancing tokens from: 31 and 26
Advanced to: 26 and 30
If statement parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: pr
Advancing tokens from: 26 and 30
Advanced to: 30 and 34
Parsing simple assignment
Advancing tokens from: 30 and 34
Advanced to: 34 and 20
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: aboba
Advancing tokens from: 26 and 21
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Processing operator: 9
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
Operation completed
First operand evaluated
First operand evaluated
Operation completed
Assigning to identifier: aboba
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: aboba
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: aboba
Evaluating statement
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: aboba
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: aboba
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: aboba
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Assigning to identifier: pr
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: aboba
Advancing tokens from: 26 and 30
Advanced to: 30 and 1
Parsing simple assignment
Advancing tokens from: 30 and 1
Advanced to: 1 and 20
Parsing expression
Parsing function definition
Advancing tokens from: 1 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 32
Parsing argument: n
Advancing tokens from: 26 and 32
Advanced to: 32 and 26
Advancing tokens from: 32 and 26
Advanced to: 26 and 21
Parsing argument: m
Advancing tokens from: 26 and 21
Advanced to: 21 and 2
Advancing tokens from: 21 and 2
Advanced to: 2 and 1
Parsing function body
Parsing statement, current token: 2, peek token: 1
Found return statement
Parsing return statement
Advancing tokens from: 2 and 1
Advanced to: 1 and 20
Parsing expression
Parsing function definition
Advancing tokens from: 1 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 21
Parsing argument: g
Advancing tokens from: 26 and 21
Advanced to: 21 and 2
Advancing tokens from: 21 and 2
Advanced to: 2 and 26
Parsing function body
Parsing statement, current token: 2, peek token: 26
Found return statement
Parsing return statement
Advancing tokens from: 2 and 26
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: g
Advancing tokens from: 26 and 7
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Advanced to: 22 and 33
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 33
Advanced to: 33 and 33
Advancing tokens from: 33 and 33
Advanced to: 33 and 26
Function parsing completed
Advancing tokens from: 33 and 26
Advanced to: 26 and 30
Function parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: rt
Advancing tokens from: 26 and 30
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Advanced to: 22 and 26
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 5
Advancing tokens from: 22 and 26
Advanced to: 26 and 30
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: fr
Advancing tokens from: 26 and 30
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Advanced to: 26 and 20
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing function call
Advancing tokens from: 26 and 20
Advanced to: 20 and 22
Parsing function arguments
Advancing tokens from: 20 and 22
Advanced to: 22 and 32
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 32
Advanced to: 32 and 26
Advancing tokens from: 32 and 26
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: rt
Advancing tokens from: 26 and 21
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Advanced to: 26 and 30
Arguments parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: uk
Advancing tokens from: 26 and 30
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Advanced to: 26 and 20
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing function call
Advancing tokens from: 26 and 20
Advanced to: 20 and 22
Parsing function arguments
Advancing tokens from: 20 and 22
Advanced to: 22 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 56
Advancing tokens from: 22 and 21
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Creating function closure
Assigning to identifier: aboba
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: rt
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing function call: aboba
Function resolved, preparing to invoke
Processing argument: n
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Processing argument: m
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: rt
First operand evaluated
First operand evaluated
Processing return statement
Creating function closure
Function returned
First operand evaluated
First operand evaluated
Assigning to identifier: fr
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing function call: fr
Function resolved, preparing to invoke
Processing argument: g
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Processing return statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: g
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Function returned
First operand evaluated
First operand evaluated
Assigning to identifier: uk
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: aboba
Advancing tokens from: 26 and 30
Advanced to: 30 and 1
Parsing simple assignment
Advancing tokens from: 30 and 1
Advanced to: 1 and 20
Parsing expression
Parsing function definition
Advancing tokens from: 1 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 32
Parsing argument: n
Advancing tokens from: 26 and 32
Advanced to: 32 and 26
Advancing tokens from: 32 and 26
Advanced to: 26 and 21
Parsing argument: m
Advancing tokens from: 26 and 21
Advanced to: 21 and 2
Advancing tokens from: 21 and 2
Advanced to: 2 and 1
Parsing function body
Parsing statement, current token: 2, peek token: 1
Found return statement
Parsing return statement
Advancing tokens from: 2 and 1
Advanced to: 1 and 20
Parsing expression
Parsing function definition
Advancing tokens from: 1 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 21
Parsing argument: g
Advancing tokens from: 26 and 21
Advanced to: 21 and 2
Advancing tokens from: 21 and 2
Advanced to: 2 and 26
Parsing function body
Parsing statement, current token: 2, peek token: 26
Found return statement
Parsing return statement
Advancing tokens from: 2 and 26
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: g
Advancing tokens from: 26 and 7
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Advanced to: 22 and 33
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 33
Advanced to: 33 and 33
Advancing tokens from: 33 and 33
Advanced to: 33 and 26
Function parsing completed
Advancing tokens from: 33 and 26
Advanced to: 26 and 30
Function parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: rt
Advancing tokens from: 26 and 30
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Advanced to: 22 and 26
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 5
Advancing tokens from: 22 and 26
Advanced to: 26 and 30
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: fr
Advancing tokens from: 26 and 30
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Advanced to: 26 and 20
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing function call
Advancing tokens from: 26 and 20
Advanced to: 20 and 22
Parsing function arguments
Advancing tokens from: 20 and 22
Advanced to: 22 and 32
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 32
Advanced to: 32 and 26
Advancing tokens from: 32 and 26
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: rt
Advancing tokens from: 26 and 21
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Advanced to: 26 and 30
Arguments parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: uk
Advancing tokens from: 26 and 30
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Advanced to: 26 and 20
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing function call
Advancing tokens from: 26 and 20
Advanced to: 20 and 22
Parsing function arguments
Advancing tokens from: 20 and 22
Advanced to: 22 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 56
Advancing tokens from: 22 and 21
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Advanced to: 26 and 30
Arguments parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: t
Advancing tokens from: 26 and 30
Advanced to: 30 and 34
Parsing simple assignment
Advancing tokens from: 30 and 34
Advanced to: 34 and 20
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: uk
Advancing tokens from: 26 and 21
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Creating function closure
Assigning to identifier: aboba
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: rt
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing function call: aboba
Function resolved, preparing to invoke
Processing argument: n
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Processing argument: m
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: rt
First operand evaluated
First operand evaluated
Processing return statement
Creating function closure
Function returned
First operand evaluated
First operand evaluated
Assigning to identifier: fr
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing function call: fr
Function resolved, preparing to invoke
Processing argument: g
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Processing return statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: g
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Function returned
First operand evaluated
First operand evaluated
Assigning to identifier: uk
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: uk
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Assigning to identifier: t
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: aboba
Advancing tokens from: 26 and 30
Advanced to: 30 and 1
Parsing simple assignment
Advancing tokens from: 30 and 1
Advanced to: 1 and 20
Parsing expression
Parsing function definition
Advancing tokens from: 1 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 32
Parsing argument: n
Advancing tokens from: 26 and 32
Advanced to: 32 and 26
Advancing tokens from: 32 and 26
Advanced to: 26 and 21
Parsing argument: m
Advancing tokens from: 26 and 21
Advanced to: 21 and 2
Advancing tokens from: 21 and 2
Advanced to: 2 and 1
Parsing function body
Parsing statement, current token: 2, peek token: 1
Found return statement
Parsing return statement
Advancing tokens from: 2 and 1
Advanced to: 1 and 20
Parsing expression
Parsing function definition
Advancing tokens from: 1 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 21
Parsing argument: g
Advancing tokens from: 26 and 21
Advanced to: 21 and 2
Advancing tokens from: 21 and 2
Advanced to: 2 and 26
Parsing function body
Parsing statement, current token: 2, peek token: 26
Found return statement
Parsing return statement
Advancing tokens from: 2 and 26
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: g
Advancing tokens from: 26 and 7
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Advanced to: 22 and 33
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 33
Advanced to: 33 and 33
Advancing tokens from: 33 and 33
Advanced to: 33 and 26
Function parsing completed
Advancing tokens from: 33 and 26
Advanced to: 26 and 30
Function parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: rt
Advancing tokens from: 26 and 30
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Advanced to: 22 and 26
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 5
Advancing tokens from: 22 and 26
Advanced to: 26 and 30
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: fr
Advancing tokens from: 26 and 30
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Advanced to: 26 and 20
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing function call
Advancing tokens from: 26 and 20
Advanced to: 20 and 22
Parsing function arguments
Advancing tokens from: 20 and 22
Advanced to: 22 and 32
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 32
Advanced to: 32 and 26
Advancing tokens from: 32 and 26
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: rt
Advancing tokens from: 26 and 21
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Advanced to: 26 and 30
Arguments parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: uk
Advancing tokens from: 26 and 30
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Advanced to: 26 and 20
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing function call
Advancing tokens from: 26 and 20
Advanced to: 20 and 22
Parsing function arguments
Advancing tokens from: 20 and 22
Advanced to: 22 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 56
Advancing tokens from: 22 and 21
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Advanced to: 26 and 30
Arguments parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: t
Advancing tokens from: 26 and 30
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Advanced to: 26 and 3
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: uk
Advancing tokens from: 26 and 3
Advanced to: 3 and 20
Statement parsed, current token: 3
Parsing next statement
Parsing statement, current token: 3, peek token: 20
Found if statement
Parsing if statement
Advancing tokens from: 3 and 20
Advanced to: 20 and 26
Parsing if condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 26
Advanced to: 26 and 8
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: t
Advancing tokens from: 26 and 8
Advanced to: 8 and 22
Advancing tokens from: 8 and 22
Advanced to: 22 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 57
Advancing tokens from: 22 and 21
Advanced to: 21 and 25
Advancing tokens from: 21 and 25
Advanced to: 25 and 26
Advancing tokens from: 25 and 26
Advanced to: 26 and 30
Parsing if body
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: r
Advancing tokens from: 26 and 30
Advanced to: 30 and 34
Parsing simple assignment
Advancing tokens from: 30 and 34
Advanced to: 34 and 20
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 22
Parsing function arguments
Advancing tokens from: 20 and 22
Advanced to: 22 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 44
Advancing tokens from: 22 and 21
Advanced to: 21 and 5
Advancing tokens from: 21 and 5
Advanced to: 5 and 26
Arguments parsing completed
Parsing else-if clauses
Parsing else clause
Advancing tokens from: 5 and 26
Advanced to: 26 and 30
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: r
Advancing tokens from: 26 and 30
Advanced to: 30 and 34
Parsing simple assignment
Advancing tokens from: 30 and 34
Advanced to: 34 and 20
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 23
Parsing function arguments
Advancing tokens from: 20 and 23
Advanced to: 23 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 21
Advanced to: 21 and 31
Advancing tokens from: 21 and 31
Advanced to: 31 and 24
Arguments parsing completed
Advancing tokens from: 31 and 24
Advanced to: 24 and 24
If statement parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Creating function closure
Assigning to identifier: aboba
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: rt
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing function call: aboba
Function resolved, preparing to invoke
Processing argument: n
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Processing argument: m
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: rt
First operand evaluated
First operand evaluated
Processing return statement
Creating function closure
Function returned
First operand evaluated
First operand evaluated
Assigning to identifier: fr
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing function call: fr
Function resolved, preparing to invoke
Processing argument: g
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Processing return statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: g
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Function returned
First operand evaluated
First operand evaluated
Assigning to identifier: uk
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: uk
First operand evaluated
First operand evaluated
Assigning to identifier: t
Evaluating statement
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: t
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Assigning to identifier: r
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: i
Advancing tokens from: 26 and 30
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Advanced to: 22 and 28
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 28
Advanced to: 28 and 20
Statement parsed, current token: 28
Parsing next statement
Parsing statement, current token: 28, peek token: 20
Found while statement
Parsing while statement
Advancing tokens from: 28 and 20
Advanced to: 20 and 26
Parsing while condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 26
Advanced to: 26 and 8
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 8
Advanced to: 8 and 22
Advancing tokens from: 8 and 22
Advanced to: 22 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 10
Advancing tokens from: 22 and 21
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Advanced to: 26 and 30
Parsing while body
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: i
Advancing tokens from: 26 and 30
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 7
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Advanced to: 22 and 35
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 35
Advanced to: 35 and 34
Advancing tokens from: 35 and 34
Advanced to: 34 and 20
While statement parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 21
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: i
Evaluating statement
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: i
Advancing tokens from: 26 and 30
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Advanced to: 22 and 28
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 28
Advanced to: 28 and 20
Statement parsed, current token: 28
Parsing next statement
Parsing statement, current token: 28, peek token: 20
Found while statement
Parsing while statement
Advancing tokens from: 28 and 20
Advanced to: 20 and 26
Parsing while condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 26
Advanced to: 26 and 8
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 8
Advanced to: 8 and 22
Advancing tokens from: 8 and 22
Advanced to: 22 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 10
Advancing tokens from: 22 and 21
Advanced to: 21 and 34
Advancing tokens from: 21 and 34
Advanced to: 34 and 20
Parsing while body
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 21
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Advanced to: 26 and 30
Arguments parsing completed
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: j
Advancing tokens from: 26 and 30
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Advanced to: 22 and 28
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 28
Advanced to: 28 and 20
Parsing statement, current token: 28, peek token: 20
Found while statement
Parsing while statement
Advancing tokens from: 28 and 20
Advanced to: 20 and 26
Parsing while condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 26
Advanced to: 26 and 8
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: j
Advancing tokens from: 26 and 8
Advanced to: 8 and 22
Advancing tokens from: 8 and 22
Advanced to: 22 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 21
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Advanced to: 26 and 30
Parsing while body
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: j
Advancing tokens from: 26 and 30
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: j
Advancing tokens from: 26 and 7
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Advanced to: 22 and 34
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 34
Advanced to: 34 and 20
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: j
Advancing tokens from: 26 and 21
Advanced to: 21 and 35
Advancing tokens from: 21 and 35
Advanced to: 35 and 26
Arguments parsing completed
Advancing tokens from: 35 and 26
Advanced to: 26 and 30
While statement parsing completed
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: i
Advancing tokens from: 26 and 30
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 7
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Advanced to: 22 and 35
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 35
Advanced to: 35 and 34
Advancing tokens from: 35 and 34
Advanced to: 34 and 20
While statement parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 21
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: i
Evaluating statement
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: i
Advancing tokens from: 26 and 30
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Advanced to: 22 and 28
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 28
Advanced to: 28 and 20
Statement parsed, current token: 28
Parsing next statement
Parsing statement, current token: 28, peek token: 20
Found while statement
Parsing while statement
Advancing tokens from: 28 and 20
Advanced to: 20 and 22
Parsing while condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 22
Advanced to: 22 and 21
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 21
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Advanced to: 26 and 30
Parsing while body
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: i
Advancing tokens from: 26 and 30
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 7
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Advanced to: 22 and 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 3
Advanced to: 3 and 20
Parsing statement, current token: 3, peek token: 20
Found if statement
Parsing if statement
Advancing tokens from: 3 and 20
Advanced to: 20 and 20
Parsing if condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 20
Advanced to: 20 and 26
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 26
Advanced to: 26 and 8
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 8
Advanced to: 8 and 22
Advancing tokens from: 8 and 22
Advanced to: 22 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 5
Advancing tokens from: 22 and 21
Advanced to: 21 and 21
Advancing tokens from: 21 and 21
Advanced to: 21 and 22
Advancing tokens from: 21 and 22
Advanced to: 22 and 5
Error: missing 'then' keyword
Parsing if body
Parsing statement, current token: 22, peek token: 5
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 7
Advancing tokens from: 22 and 5
Advanced to: 5 and 39
Parsing else-if clauses
Parsing else clause
Advancing tokens from: 5 and 39
Advanced to: 39 and 31
Parsing statement, current token: 39, peek token: 31
Found break statement
Advancing tokens from: 39 and 31
Advanced to: 31 and 34
Advancing tokens from: 31 and 34
Advanced to: 34 and 20
If statement parsing completed
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 21
Advanced to: 21 and 35
Advancing tokens from: 21 and 35
Advanced to: 35 and 34
Arguments parsing completed
Advancing tokens from: 35 and 34
Advanced to: 34 and 20
While statement parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 23
Parsing function arguments
Advancing tokens from: 20 and 23
Advanced to: 23 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 21
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: i
Evaluating statement
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating break statement
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: i
Advancing tokens from: 26 and 30
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Advanced to: 22 and 28
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 28
Advanced to: 28 and 20
Statement parsed, current token: 28
Parsing next statement
Parsing statement, current token: 28, peek token: 20
Found while statement
Parsing while statement
Advancing tokens from: 28 and 20
Advanced to: 20 and 26
Parsing while condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 26
Advanced to: 26 and 8
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 8
Advanced to: 8 and 22
Advancing tokens from: 8 and 22
Advanced to: 22 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 5
Advancing tokens from: 22 and 21
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Advanced to: 26 and 30
Parsing while body
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: i
Advancing tokens from: 26 and 30
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 7
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Advanced to: 22 and 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 3
Advanced to: 3 and 20
Parsing statement, current token: 3, peek token: 20
Found if statement
Parsing if statement
Advancing tokens from: 3 and 20
Advanced to: 20 and 26
Parsing if condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 26
Advanced to: 26 and 8
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 8
Advanced to: 8 and 22
Advancing tokens from: 8 and 22
Advanced to: 22 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 21
Advanced to: 21 and 40
Advancing tokens from: 21 and 40
Advanced to: 40 and 31
Error: missing 'then' keyword
Parsing if body
Parsing statement, current token: 40, peek token: 31
Found continue statement
Advancing tokens from: 40 and 31
Advanced to: 31 and 34
Parsing else-if clauses
Parsing else clause
Advancing tokens from: 31 and 34
Advanced to: 34 and 20
If statement parsing completed
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 21
Advanced to: 21 and 35
Advancing tokens from: 21 and 35
Advanced to: 35 and 34
Arguments parsing completed
Advancing tokens from: 35 and 34
Advanced to: 34 and 20
While statement parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 23
Parsing function arguments
Advancing tokens from: 20 and 23
Advanced to: 23 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 21
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: i
Evaluating statement
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Evaluating continue statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Evaluating continue statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Evaluating continue statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Evaluating continue statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: i
Advancing tokens from: 26 and 30
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Advanced to: 22 and 28
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 28
Advanced to: 28 and 20
Statement parsed, current token: 28
Parsing next statement
Parsing statement, current token: 28, peek token: 20
Found while statement
Parsing while statement
Advancing tokens from: 28 and 20
Advanced to: 20 and 26
Parsing while condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 26
Advanced to: 26 and 8
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 8
Advanced to: 8 and 22
Advancing tokens from: 8 and 22
Advanced to: 22 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 21
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Advanced to: 26 and 30
Parsing while body
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: i
Advancing tokens from: 26 and 30
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 7
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Advanced to: 22 and 26
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 26
Advanced to: 26 and 30
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: j
Advancing tokens from: 26 and 30
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Advanced to: 22 and 28
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 28
Advanced to: 28 and 20
Parsing statement, current token: 28, peek token: 20
Found while statement
Parsing while statement
Advancing tokens from: 28 and 20
Advanced to: 20 and 26
Parsing while condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 26
Advanced to: 26 and 8
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: j
Advancing tokens from: 26 and 8
Advanced to: 8 and 22
Advancing tokens from: 8 and 22
Advanced to: 22 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 4
Advancing tokens from: 22 and 21
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Advanced to: 26 and 30
Parsing while body
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: j
Advancing tokens from: 26 and 30
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: j
Advancing tokens from: 26 and 7
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Advanced to: 22 and 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 3
Advanced to: 3 and 20
Parsing statement, current token: 3, peek token: 20
Found if statement
Parsing if statement
Advancing tokens from: 3 and 20
Advanced to: 20 and 26
Parsing if condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 26
Advanced to: 26 and 8
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: j
Advancing tokens from: 26 and 8
Advanced to: 8 and 22
Advancing tokens from: 8 and 22
Advanced to: 22 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 21
Advanced to: 21 and 22
Advancing tokens from: 21 and 22
Advanced to: 22 and 5
Error: missing 'then' keyword
Parsing if body
Parsing statement, current token: 22, peek token: 5
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 7
Advancing tokens from: 22 and 5
Advanced to: 5 and 39
Parsing else-if clauses
Parsing else clause
Advancing tokens from: 5 and 39
Advanced to: 39 and 31
Parsing statement, current token: 39, peek token: 31
Found break statement
Advancing tokens from: 39 and 31
Advanced to: 31 and 34
Advancing tokens from: 31 and 34
Advanced to: 34 and 20
If statement parsing completed
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: j
Advancing tokens from: 26 and 21
Advanced to: 21 and 35
Advancing tokens from: 21 and 35
Advanced to: 35 and 34
Arguments parsing completed
Advancing tokens from: 35 and 34
Advanced to: 34 and 20
While statement parsing completed
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 21
Advanced to: 21 and 35
Advancing tokens from: 21 and 35
Advanced to: 35 and 24
Arguments parsing completed
Advancing tokens from: 35 and 24
Advanced to: 24 and 24
While statement parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: i
Evaluating statement
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Evaluating break statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Evaluating break statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: i
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Assigning to identifier: j
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Evaluating break statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: a
Advancing tokens from: 26 and 30
Advanced to: 30 and 36
Parsing simple assignment
Advancing tokens from: 30 and 36
Advanced to: 36 and 22
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 36
Parsing array literal
Advancing tokens from: 36 and 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 4
Advancing tokens from: 22 and 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 5
Advancing tokens from: 22 and 37
Advanced to: 37 and 34
Advancing tokens from: 37 and 34
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 37
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Advanced to: 21 and 34
Advancing tokens from: 21 and 34
Advanced to: 34 and 20
Arguments parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 4
Advancing tokens from: 22 and 37
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Advanced to: 26 and 30
Arguments parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: b2
Advancing tokens from: 26 and 30
Advanced to: 30 and 36
Parsing simple assignment
Advancing tokens from: 30 and 36
Advanced to: 36 and 22
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 36
Parsing array literal
Advancing tokens from: 36 and 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 10
Advancing tokens from: 22 and 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 20
Advancing tokens from: 22 and 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 30
Advancing tokens from: 22 and 37
Advanced to: 37 and 34
Advancing tokens from: 37 and 34
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 37
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Advanced to: 26 and 30
Arguments parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: i
Advancing tokens from: 26 and 30
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Advanced to: 22 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 34
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Advanced to: 36 and 26
Advancing tokens from: 36 and 26
Advanced to: 26 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 37
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Advanced to: 21 and 34
Advancing tokens from: 21 and 34
Advanced to: 34 and 20
Arguments parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Advanced to: 36 and 26
Advancing tokens from: 36 and 26
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 7
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Advanced to: 22 and 37
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 37
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Creating array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Assigning to identifier: a
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Creating array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Assigning to identifier: b2
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: i
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: arr
Advancing tokens from: 26 and 30
Advanced to: 30 and 36
Parsing simple assignment
Advancing tokens from: 30 and 36
Advanced to: 36 and 22
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 36
Parsing array literal
Advancing tokens from: 36 and 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 32
Advanced to: 32 and 23
Advancing tokens from: 32 and 23
Advanced to: 23 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 32
Advanced to: 32 and 1
Advancing tokens from: 32 and 1
Advanced to: 1 and 20
Parsing expression
Parsing function definition
Advancing tokens from: 1 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 21
Parsing argument: x
Advancing tokens from: 26 and 21
Advanced to: 21 and 2
Advancing tokens from: 21 and 2
Advanced to: 2 and 26
Parsing function body
Parsing statement, current token: 2, peek token: 26
Found return statement
Parsing return statement
Advancing tokens from: 2 and 26
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: x
Advancing tokens from: 26 and 7
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Advanced to: 22 and 33
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 33
Advanced to: 33 and 32
Advancing tokens from: 33 and 32
Advanced to: 32 and 36
Function parsing completed
Advancing tokens from: 32 and 36
Advanced to: 36 and 22
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 36
Parsing array literal
Advancing tokens from: 36 and 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 37
Advanced to: 37 and 32
Advancing tokens from: 37 and 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2e30
Advancing tokens from: 22 and 37
Advanced to: 37 and 34
Advancing tokens from: 37 and 34
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 37
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Advanced to: 21 and 34
Advancing tokens from: 21 and 34
Advanced to: 34 and 20
Arguments parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 37
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Advanced to: 26 and 30
Arguments parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: f
Advancing tokens from: 26 and 30
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Advanced to: 26 and 36
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 37
Advanced to: 37 and 34
Advancing tokens from: 37 and 34
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 20
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing function call
Advancing tokens from: 26 and 20
Advanced to: 20 and 22
Parsing function arguments
Advancing tokens from: 20 and 22
Advanced to: 22 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 5
Advancing tokens from: 22 and 21
Advanced to: 21 and 21
Advancing tokens from: 21 and 21
Advanced to: 21 and 34
Arguments parsing completed
Advancing tokens from: 21 and 34
Advanced to: 34 and 20
Arguments parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 37
Advanced to: 37 and 36
Advancing tokens from: 37 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 37
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Advanced to: 21 and 34
Advancing tokens from: 21 and 34
Advanced to: 34 and 20
Arguments parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 4
Advancing tokens from: 22 and 37
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Creating array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Creating function closure
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Creating array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Assigning to identifier: arr
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Assigning to identifier: f
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing function call: f
Function resolved, preparing to invoke
Processing argument: x
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Processing return statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: x
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Operation completed
Function returned
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: arr
Advancing tokens from: 26 and 30
Advanced to: 30 and 36
Parsing simple assignment
Advancing tokens from: 30 and 36
Advanced to: 36 and 22
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 36
Parsing array literal
Advancing tokens from: 36 and 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 37
Advanced to: 37 and 26
Advancing tokens from: 37 and 26
Advanced to: 26 and 36
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 36
Attempting to parse assignment
Processing identifier: arr
Advancing tokens from: 26 and 36
Advanced to: 36 and 22
Parsing array assignment
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 37
Advanced to: 37 and 30
Advancing tokens from: 37 and 30
Advanced to: 30 and 23
Advancing tokens from: 30 and 23
Advanced to: 23 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 34
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 37
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Advanced to: 21 and 34
Advancing tokens from: 21 and 34
Advanced to: 34 and 20
Arguments parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 37
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Advanced to: 21 and 34
Advancing tokens from: 21 and 34
Advanced to: 34 and 20
Arguments parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 37
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Creating array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Assigning to identifier: arr
Evaluating statement
Assigning to array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: arr
Advancing tokens from: 26 and 30
Advanced to: 30 and 36
Parsing simple assignment
Advancing tokens from: 30 and 36
Advanced to: 36 and 36
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 36
Parsing array literal
Advancing tokens from: 36 and 36
Advanced to: 36 and 22
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 36
Parsing array literal
Advancing tokens from: 36 and 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 37
Advanced to: 37 and 32
Advancing tokens from: 37 and 32
Advanced to: 32 and 36
Advancing tokens from: 32 and 36
Advanced to: 36 and 22
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 36
Parsing array literal
Advancing tokens from: 36 and 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 4
Advancing tokens from: 22 and 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 5
Advancing tokens from: 22 and 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 6
Advancing tokens from: 22 and 37
Advanced to: 37 and 32
Advancing tokens from: 37 and 32
Advanced to: 32 and 36
Advancing tokens from: 32 and 36
Advanced to: 36 and 22
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 36
Parsing array literal
Advancing tokens from: 36 and 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 7
Advancing tokens from: 22 and 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 8
Advancing tokens from: 22 and 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 9
Advancing tokens from: 22 and 37
Advanced to: 37 and 37
Advancing tokens from: 37 and 37
Advanced to: 37 and 26
Advancing tokens from: 37 and 26
Advanced to: 26 and 36
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 36
Attempting to parse assignment
Processing identifier: arr
Advancing tokens from: 26 and 36
Advanced to: 36 and 22
Parsing array assignment
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 37
Advanced to: 37 and 36
Advancing tokens from: 37 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 37
Advanced to: 37 and 30
Advancing tokens from: 37 and 30
Advanced to: 30 and 23
Advancing tokens from: 30 and 23
Advanced to: 23 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 34
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 37
Advanced to: 37 and 36
Advancing tokens from: 37 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 37
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Advanced to: 21 and 34
Advancing tokens from: 21 and 34
Advanced to: 34 and 20
Arguments parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 37
Advanced to: 37 and 36
Advancing tokens from: 37 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 37
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Advanced to: 21 and 34
Advancing tokens from: 21 and 34
Advanced to: 34 and 20
Arguments parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 37
Advanced to: 37 and 36
Advancing tokens from: 37 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 37
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Advanced to: 26 and 36
Arguments parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 36
Attempting to parse assignment
Processing identifier: arr
Advancing tokens from: 26 and 36
Advanced to: 36 and 22
Parsing array assignment
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 37
Advanced to: 37 and 36
Advancing tokens from: 37 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 37
Advanced to: 37 and 30
Advancing tokens from: 37 and 30
Advanced to: 30 and 23
Advancing tokens from: 30 and 23
Advanced to: 23 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 34
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 37
Advanced to: 37 and 36
Advancing tokens from: 37 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 37
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Advanced to: 21 and 34
Advancing tokens from: 21 and 34
Advanced to: 34 and 20
Arguments parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 37
Advanced to: 37 and 36
Advancing tokens from: 37 and 36
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 37
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Creating array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Creating array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Creating array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Creating array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Assigning to identifier: arr
Evaluating statement
Assigning to array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Assigning to array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 22
Parsing function arguments
Advancing tokens from: 20 and 22
Advanced to: 22 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1e30
Advancing tokens from: 22 and 21
Advanced to: 21 and 34
Advancing tokens from: 21 and 34
Advanced to: 34 and 20
Arguments parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 22
Parsing function arguments
Advancing tokens from: 20 and 22
Advanced to: 22 and 26
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 26
Advanced to: 26 and 8
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: e
Advancing tokens from: 26 and 8
Advanced to: 8 and 22
Advancing tokens from: 8 and 22
Advanced to: 22 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 30
Advancing tokens from: 22 and 21
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: aboba
Advancing tokens from: 26 and 30
Advanced to: 30 and 23
Parsing simple assignment
Advancing tokens from: 30 and 23
Advanced to: 23 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 34
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 7
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: aboba
Advancing tokens from: 26 and 7
Advanced to: 7 and 23
Advancing tokens from: 7 and 23
Advanced to: 23 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 21
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Assigning to identifier: aboba
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: aboba
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: aboba
Advancing tokens from: 26 and 30
Advanced to: 30 and 23
Parsing simple assignment
Advancing tokens from: 30 and 23
Advanced to: 23 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 34
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 9
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: aboba
Advancing tokens from: 26 and 9
Advanced to: 9 and 22
Advancing tokens from: 9 and 22
Advanced to: 22 and 21
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 21
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Assigning to identifier: aboba
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: aboba
First operand evaluated
Processing operator: 9
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
Operation completed
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: str1
Advancing tokens from: 26 and 30
Advanced to: 30 and 23
Parsing simple assignment
Advancing tokens from: 30 and 23
Advanced to: 23 and 26
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 26
Advanced to: 26 and 30
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: str2
Advancing tokens from: 26 and 30
Advanced to: 30 and 23
Parsing simple assignment
Advancing tokens from: 30 and 23
Advanced to: 23 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 34
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 8
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: str1
Advancing tokens from: 26 and 8
Advanced to: 8 and 26
Advancing tokens from: 8 and 26
Advanced to: 26 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: str2
Advancing tokens from: 26 and 21
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Advanced to: 26 and 30
Arguments parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: str3
Advancing tokens from: 26 and 30
Advanced to: 30 and 23
Parsing simple assignment
Advancing tokens from: 30 and 23
Advanced to: 23 and 26
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 26
Advanced to: 26 and 30
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: str4
Advancing tokens from: 26 and 30
Advanced to: 30 and 23
Parsing simple assignment
Advancing tokens from: 30 and 23
Advanced to: 23 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 34
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 8
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: str3
Advancing tokens from: 26 and 8
Advanced to: 8 and 26
Advancing tokens from: 8 and 26
Advanced to: 26 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: str4
Advancing tokens from: 26 and 21
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Assigning to identifier: str1
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Assigning to identifier: str2
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: str1
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: str2
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Assigning to identifier: str3
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Assigning to identifier: str4
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: str3
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: str4
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: str1
Advancing tokens from: 26 and 30
Advanced to: 30 and 23
Parsing simple assignment
Advancing tokens from: 30 and 23
Advanced to: 23 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 34
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Advanced to: 26 and 10
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: str1
Advancing tokens from: 26 and 10
Advanced to: 10 and 22
Advancing tokens from: 10 and 22
Advanced to: 22 and 21
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 21
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Assigning to identifier: str1
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: str1
First operand evaluated
Processing operator: 10
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
Operation completed
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: str1
Advancing tokens from: 26 and 30
Advanced to: 30 and 23
Parsing simple assignment
Advancing tokens from: 30 and 23
Advanced to: 23 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 34
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 8
Parsing function arguments
Advancing tokens from: 20 and 8
Advanced to: 8 and 26
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Found prefix operator
Advancing tokens from: 8 and 26
Advanced to: 26 and 21
Parsing expression at level 0, token type: 26
Parsing identifier: str1
Advancing tokens from: 26 and 21
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Assigning to identifier: str1
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: str1
Applying prefix operator: 8
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: str1
Advancing tokens from: 26 and 30
Advanced to: 30 and 23
Parsing simple assignment
Advancing tokens from: 30 and 23
Advanced to: 23 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 34
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 8
Parsing function arguments
Advancing tokens from: 20 and 8
Advanced to: 8 and 20
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Found prefix operator
Advancing tokens from: 8 and 20
Advanced to: 20 and 8
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 8
Advanced to: 8 and 26
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Found prefix operator
Advancing tokens from: 8 and 26
Advanced to: 26 and 21
Parsing expression at level 0, token type: 26
Parsing identifier: str1
Advancing tokens from: 26 and 21
Advanced to: 21 and 21
Advancing tokens from: 21 and 21
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Assigning to identifier: str1
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: str1
Applying prefix operator: 8
First operand evaluated
First operand evaluated
Applying prefix operator: 8
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: str1
Advancing tokens from: 26 and 30
Advanced to: 30 and 23
Parsing simple assignment
Advancing tokens from: 30 and 23
Advanced to: 23 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 34
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 8
Parsing function arguments
Advancing tokens from: 20 and 8
Advanced to: 8 and 20
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Found prefix operator
Advancing tokens from: 8 and 20
Advanced to: 20 and 8
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 8
Advanced to: 8 and 20
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Found prefix operator
Advancing tokens from: 8 and 20
Advanced to: 20 and 8
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 8
Advanced to: 8 and 26
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Found prefix operator
Advancing tokens from: 8 and 26
Advanced to: 26 and 21
Parsing expression at level 0, token type: 26
Parsing identifier: str1
Advancing tokens from: 26 and 21
Advanced to: 21 and 21
Advancing tokens from: 21 and 21
Advanced to: 21 and 21
Advancing tokens from: 21 and 21
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Assigning to identifier: str1
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: str1
Applying prefix operator: 8
First operand evaluated
First operand evaluated
Applying prefix operator: 8
First operand evaluated
First operand evaluated
Applying prefix operator: 8
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Advanced to: 20 and 8
Parsing function arguments
Advancing tokens from: 20 and 8
Advanced to: 8 and 20
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Found prefix operator
Advancing tokens from: 8 and 20
Advanced to: 20 and 23
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 23
Advanced to: 23 and 9
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 9
Advanced to: 9 and 22
Advancing tokens from: 9 and 22
Advanced to: 22 and 21
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 4
Advancing tokens from: 22 and 21
Advanced to: 21 and 10
Advancing tokens from: 21 and 10
Advanced to: 10 and 22
Advancing tokens from: 10 and 22
Advanced to: 22 and 7
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 7
Advanced to: 7 and 23
Advancing tokens from: 7 and 23
Advanced to: 23 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 21
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
Processing operator: 9
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
Operation completed
First operand evaluated
Applying prefix operator: 8
First operand evaluated
Processing operator: 10
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
Operation completed
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
Operation completed
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: aboba
Advancing tokens from: 26 and 30
Getting token, current type: 22
Getting next token at position: 7
Found keyword, type: 7
Token returned: 22, next token type: 7
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Getting token, current type: 7
Getting next token at position: 8
Found number literal
Finding number
Parsed number: 8
Token returned: 7, next token type: 22
Advanced to: 22 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 7
Advancing tokens from: 22 and 7
Getting token, current type: 22
Getting next token at position: 9
Found keyword, type: 7
Token returned: 22, next token type: 7
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Getting token, current type: 7
Getting next token at position: 10
Found keyword, type: 20
Token returned: 7, next token type: 20
Advanced to: 22 and 7
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 8
Advancing tokens from: 22 and 7
Getting token, current type: 20
Getting next token at position: 11
Found number literal
Finding number
Finding number
Parsed number: 10
Token returned: 20, next token type: 22
Advanced to: 7 and 20
Advancing tokens from: 7 and 20
Getting token, current type: 22
Getting next token at position: 13
Found keyword, type: 9
Token returned: 22, next token type: 9
Advanced to: 20 and 22
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 22
Getting token, current type: 9
Getting next token at position: 14
Found number literal
Finding number
Parsed number: 3
Token returned: 9, next token type: 22
Advanced to: 22 and 9
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 10
Advancing tokens from: 22 and 9
Getting token, current type: 22
Getting next token at position: 15
Found keyword, type: 21
Token returned: 22, next token type: 21
Advanced to: 9 and 22
Advancing tokens from: 9 and 22
Getting token, current type: 21
Getting next token at position: 16
Found identifier
Token returned: 21, next token type: 26
Advanced to: 22 and 21
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 21
Getting token, current type: 26
Getting next token at position: 21
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Getting token, current type: 30
Getting next token at position: 22
Found identifier
Token returned: 30, next token type: 26
Advanced to: 26 and 30
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: aboba
Advancing tokens from: 26 and 30
Getting token, current type: 26
Getting next token at position: 27
Found keyword, type: 7
Token returned: 26, next token type: 7
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Getting token, current type: 7
Getting next token at position: 28
Found number literal
Finding number
Parsed number: 2
Token returned: 7, next token type: 22
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: aboba
Advancing tokens from: 26 and 7
Getting token, current type: 22
Getting next token at position: 29
Found keyword, type: 3
Token returned: 22, next token type: 3
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Getting token, current type: 3
Getting next token at position: 31
Found number literal
Finding number
Parsed number: 0
Token returned: 3, next token type: 22
Advanced to: 22 and 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 3
Getting token, current type: 22
Getting next token at position: 32
Found keyword, type: 25
Token returned: 22, next token type: 25
Advanced to: 3 and 22
Statement parsed, current token: 3
Parsing next statement
Parsing statement, current token: 3, peek token: 22
Found if statement
Parsing if statement
Advancing tokens from: 3 and 22
Getting token, current type: 25
Getting next token at position: 36
Found identifier
Token returned: 25, next token type: 26
Advanced to: 22 and 25
Parsing if condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 25
Getting token, current type: 26
Getting next token at position: 41
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 25 and 26
Advancing tokens from: 25 and 26
Getting token, current type: 30
Getting next token at position: 42
Found number literal
Finding number
Parsed number: 3
Token returned: 30, next token type: 22
Advanced to: 26 and 30
Parsing if body
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: aboba
Advancing tokens from: 26 and 30
Getting token, current type: 22
Getting next token at position: 43
Found keyword, type: 8
Token returned: 22, next token type: 8
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Getting token, current type: 8
Getting next token at position: 44
Found identifier
Token returned: 8, next token type: 26
Advanced to: 22 and 8
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 8
Getting token, current type: 26
Getting next token at position: 49
Found keyword, type: 5
Token returned: 26, next token type: 5
Advanced to: 8 and 26
Advancing tokens from: 8 and 26
Getting token, current type: 5
Getting next token at position: 53
Found identifier
Token returned: 5, next token type: 26
Advanced to: 26 and 5
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: aboba
Advancing tokens from: 26 and 5
Getting token, current type: 26
Getting next token at position: 58
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 5 and 26
Parsing else-if clauses
Parsing else clause
Advancing tokens from: 5 and 26
Getting token, current type: 30
Getting next token at position: 59
Found identifier
Token returned: 30, next token type: 26
Advanced to: 26 and 30
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: aboba
Advancing tokens from: 26 and 30
Getting token, current type: 26
Getting next token at position: 64
Found keyword, type: 7
Token returned: 26, next token type: 7
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Getting token, current type: 7
Getting next token at position: 65
Found number literal
Finding number
Parsed number: 1
Token returned: 7, next token type: 22
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: aboba
Advancing tokens from: 26 and 7
Getting token, current type: 22
Getting next token at position: 66
Found keyword, type: 31
Token returned: 22, next token type: 31
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Getting token, current type: 31
Getting next token at position: 71
Found new identifier
Token returned: 31, next token type: 26
Advanced to: 22 and 31
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 31
Getting token, current type: 26
Getting next token at position: 73
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 31 and 26
Advancing tokens from: 31 and 26
Getting token, current type: 30
Getting next token at position: 74
Found keyword, type: 34
Token returned: 30, next token type: 34
Advanced to: 26 and 30
If statement parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: pr
Advancing tokens from: 26 and 30
Getting token, current type: 34
Getting next token at position: 79
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 30 and 34
Parsing simple assignment
Advancing tokens from: 30 and 34
Getting token, current type: 20
Getting next token at position: 80
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 85
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 21
Getting next token at position: 86
No valid token found
Token returned: 21, next token type: 24
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: aboba
Advancing tokens from: 26 and 21
Getting token, current type: 24
Invalid token at position: 86
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Getting token, current type: 24
Invalid token at position: 86
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 7 + 8
Binary operation result type: struct Object
Operation completed
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Processing operator: 9
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
Executing binary operator: 9
Operand types: struct Object and struct Object
Multiplying types: struct Object and struct Object
Multiplying doubles: 10 * 3
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 15 + 30
Binary operation result type: struct Object
Operation completed
Assigning to identifier: aboba
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: aboba
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 45 + 2
Binary operation result type: struct Object
Operation completed
Assigning to identifier: aboba
Evaluating statement
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: aboba
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 47 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: aboba
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: aboba
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Assigning to identifier: pr
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: aboba
Advancing tokens from: 26 and 30
Getting token, current type: 1
Getting next token at position: 14
Found keyword, type: 20
Token returned: 1, next token type: 20
Advanced to: 30 and 1
Parsing simple assignment
Advancing tokens from: 30 and 1
Getting token, current type: 20
Getting next token at position: 15
Found new identifier
Token returned: 20, next token type: 26
Advanced to: 1 and 20
Parsing expression
Parsing function definition
Advancing tokens from: 1 and 20
Getting token, current type: 26
Getting next token at position: 16
Found keyword, type: 32
Token returned: 26, next token type: 32
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 32
Getting next token at position: 17
Found new identifier
Token returned: 32, next token type: 26
Advanced to: 26 and 32
Parsing argument: n
Advancing tokens from: 26 and 32
Getting token, current type: 26
Getting next token at position: 18
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 32 and 26
Advancing tokens from: 32 and 26
Getting token, current type: 21
Getting next token at position: 19
Found keyword, type: 2
Token returned: 21, next token type: 2
Advanced to: 26 and 21
Parsing argument: m
Advancing tokens from: 26 and 21
Getting token, current type: 2
Getting next token at position: 25
Found keyword, type: 1
Token returned: 2, next token type: 1
Advanced to: 21 and 2
Advancing tokens from: 21 and 2
Getting token, current type: 1
Getting next token at position: 33
Found keyword, type: 20
Token returned: 1, next token type: 20
Advanced to: 2 and 1
Parsing function body
Parsing statement, current token: 2, peek token: 1
Found return statement
Parsing return statement
Advancing tokens from: 2 and 1
Getting token, current type: 20
Getting next token at position: 34
Found new identifier
Token returned: 20, next token type: 26
Advanced to: 1 and 20
Parsing expression
Parsing function definition
Advancing tokens from: 1 and 20
Getting token, current type: 26
Getting next token at position: 35
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 21
Getting next token at position: 36
Found keyword, type: 2
Token returned: 21, next token type: 2
Advanced to: 26 and 21
Parsing argument: g
Advancing tokens from: 26 and 21
Getting token, current type: 2
Getting next token at position: 42
Found identifier
Token returned: 2, next token type: 26
Advanced to: 21 and 2
Advancing tokens from: 21 and 2
Getting token, current type: 26
Getting next token at position: 43
Found keyword, type: 7
Token returned: 26, next token type: 7
Advanced to: 2 and 26
Parsing function body
Parsing statement, current token: 2, peek token: 26
Found return statement
Parsing return statement
Advancing tokens from: 2 and 26
Getting token, current type: 7
Getting next token at position: 44
Found number literal
Finding number
Parsed number: 1
Token returned: 7, next token type: 22
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: g
Advancing tokens from: 26 and 7
Getting token, current type: 22
Getting next token at position: 45
Found keyword, type: 33
Token returned: 22, next token type: 33
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Getting token, current type: 33
Getting next token at position: 56
Found keyword, type: 33
Token returned: 33, next token type: 33
Advanced to: 22 and 33
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 33
Getting token, current type: 33
Getting next token at position: 67
Found new identifier
Token returned: 33, next token type: 26
Advanced to: 33 and 33
Advancing tokens from: 33 and 33
Getting token, current type: 26
Getting next token at position: 69
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 33 and 26
Function parsing completed
Advancing tokens from: 33 and 26
Getting token, current type: 30
Getting next token at position: 70
Found number literal
Finding number
Parsed number: 5
Token returned: 30, next token type: 22
Advanced to: 26 and 30
Function parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: rt
Advancing tokens from: 26 and 30
Getting token, current type: 22
Getting next token at position: 71
Found new identifier
Token returned: 22, next token type: 26
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Getting token, current type: 26
Getting next token at position: 73
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 22 and 26
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 5
Advancing tokens from: 22 and 26
Getting token, current type: 30
Getting next token at position: 74
Found identifier
Token returned: 30, next token type: 26
Advanced to: 26 and 30
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: fr
Advancing tokens from: 26 and 30
Getting token, current type: 26
Getting next token at position: 79
Found keyword, type: 20
Token returned: 26, next token type: 20
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Getting token, current type: 20
Getting next token at position: 80
Found number literal
Finding number
Parsed number: 3
Token returned: 20, next token type: 22
Advanced to: 26 and 20
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing function call
Advancing tokens from: 26 and 20
Getting token, current type: 22
Getting next token at position: 81
Found keyword, type: 32
Token returned: 22, next token type: 32
Advanced to: 20 and 22
Parsing function arguments
Advancing tokens from: 20 and 22
Getting token, current type: 32
Getting next token at position: 82
Found identifier
Token returned: 32, next token type: 26
Advanced to: 22 and 32
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 32
Getting token, current type: 26
Getting next token at position: 84
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 32 and 26
Advancing tokens from: 32 and 26
Getting token, current type: 21
Getting next token at position: 85
Found new identifier
Token returned: 21, next token type: 26
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: rt
Advancing tokens from: 26 and 21
Getting token, current type: 26
Getting next token at position: 87
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Getting token, current type: 30
Getting next token at position: 88
Found identifier
Token returned: 30, next token type: 26
Advanced to: 26 and 30
Arguments parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: uk
Advancing tokens from: 26 and 30
Getting token, current type: 26
Getting next token at position: 90
Found keyword, type: 20
Token returned: 26, next token type: 20
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Getting token, current type: 20
Getting next token at position: 91
Found number literal
Finding number
Finding number
Parsed number: 56
Token returned: 20, next token type: 22
Advanced to: 26 and 20
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing function call
Advancing tokens from: 26 and 20
Getting token, current type: 22
Getting next token at position: 93
Found keyword, type: 21
Token returned: 22, next token type: 21
Advanced to: 20 and 22
Parsing function arguments
Advancing tokens from: 20 and 22
Getting token, current type: 21
Getting next token at position: 94
No valid token found
Token returned: 21, next token type: 24
Advanced to: 22 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 56
Advancing tokens from: 22 and 21
Getting token, current type: 24
Invalid token at position: 94
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Getting token, current type: 24
Invalid token at position: 94
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Creating function closure
Assigning to identifier: aboba
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: rt
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing function call: aboba
Function resolved, preparing to invoke
Processing argument: n
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Processing argument: m
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: rt
First operand evaluated
First operand evaluated
Processing return statement
Creating function closure
Function returned
First operand evaluated
First operand evaluated
Assigning to identifier: fr
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing function call: fr
Function resolved, preparing to invoke
Processing argument: g
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Processing return statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: g
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 56 + 1
Binary operation result type: struct Object
Operation completed
Function returned
First operand evaluated
First operand evaluated
Assigning to identifier: uk
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: aboba
Advancing tokens from: 26 and 30
Getting token, current type: 1
Getting next token at position: 14
Found keyword, type: 20
Token returned: 1, next token type: 20
Advanced to: 30 and 1
Parsing simple assignment
Advancing tokens from: 30 and 1
Getting token, current type: 20
Getting next token at position: 15
Found new identifier
Token returned: 20, next token type: 26
Advanced to: 1 and 20
Parsing expression
Parsing function definition
Advancing tokens from: 1 and 20
Getting token, current type: 26
Getting next token at position: 16
Found keyword, type: 32
Token returned: 26, next token type: 32
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 32
Getting next token at position: 17
Found new identifier
Token returned: 32, next token type: 26
Advanced to: 26 and 32
Parsing argument: n
Advancing tokens from: 26 and 32
Getting token, current type: 26
Getting next token at position: 18
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 32 and 26
Advancing tokens from: 32 and 26
Getting token, current type: 21
Getting next token at position: 19
Found keyword, type: 2
Token returned: 21, next token type: 2
Advanced to: 26 and 21
Parsing argument: m
Advancing tokens from: 26 and 21
Getting token, current type: 2
Getting next token at position: 25
Found keyword, type: 1
Token returned: 2, next token type: 1
Advanced to: 21 and 2
Advancing tokens from: 21 and 2
Getting token, current type: 1
Getting next token at position: 33
Found keyword, type: 20
Token returned: 1, next token type: 20
Advanced to: 2 and 1
Parsing function body
Parsing statement, current token: 2, peek token: 1
Found return statement
Parsing return statement
Advancing tokens from: 2 and 1
Getting token, current type: 20
Getting next token at position: 34
Found new identifier
Token returned: 20, next token type: 26
Advanced to: 1 and 20
Parsing expression
Parsing function definition
Advancing tokens from: 1 and 20
Getting token, current type: 26
Getting next token at position: 35
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 21
Getting next token at position: 36
Found keyword, type: 2
Token returned: 21, next token type: 2
Advanced to: 26 and 21
Parsing argument: g
Advancing tokens from: 26 and 21
Getting token, current type: 2
Getting next token at position: 42
Found identifier
Token returned: 2, next token type: 26
Advanced to: 21 and 2
Advancing tokens from: 21 and 2
Getting token, current type: 26
Getting next token at position: 43
Found keyword, type: 7
Token returned: 26, next token type: 7
Advanced to: 2 and 26
Parsing function body
Parsing statement, current token: 2, peek token: 26
Found return statement
Parsing return statement
Advancing tokens from: 2 and 26
Getting token, current type: 7
Getting next token at position: 44
Found number literal
Finding number
Parsed number: 1
Token returned: 7, next token type: 22
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: g
Advancing tokens from: 26 and 7
Getting token, current type: 22
Getting next token at position: 45
Found keyword, type: 33
Token returned: 22, next token type: 33
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Getting token, current type: 33
Getting next token at position: 56
Found keyword, type: 33
Token returned: 33, next token type: 33
Advanced to: 22 and 33
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 33
Getting token, current type: 33
Getting next token at position: 67
Found new identifier
Token returned: 33, next token type: 26
Advanced to: 33 and 33
Advancing tokens from: 33 and 33
Getting token, current type: 26
Getting next token at position: 69
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 33 and 26
Function parsing completed
Advancing tokens from: 33 and 26
Getting token, current type: 30
Getting next token at position: 70
Found number literal
Finding number
Parsed number: 5
Token returned: 30, next token type: 22
Advanced to: 26 and 30
Function parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: rt
Advancing tokens from: 26 and 30
Getting token, current type: 22
Getting next token at position: 71
Found new identifier
Token returned: 22, next token type: 26
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Getting token, current type: 26
Getting next token at position: 73
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 22 and 26
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 5
Advancing tokens from: 22 and 26
Getting token, current type: 30
Getting next token at position: 74
Found identifier
Token returned: 30, next token type: 26
Advanced to: 26 and 30
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: fr
Advancing tokens from: 26 and 30
Getting token, current type: 26
Getting next token at position: 79
Found keyword, type: 20
Token returned: 26, next token type: 20
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Getting token, current type: 20
Getting next token at position: 80
Found number literal
Finding number
Parsed number: 3
Token returned: 20, next token type: 22
Advanced to: 26 and 20
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing function call
Advancing tokens from: 26 and 20
Getting token, current type: 22
Getting next token at position: 81
Found keyword, type: 32
Token returned: 22, next token type: 32
Advanced to: 20 and 22
Parsing function arguments
Advancing tokens from: 20 and 22
Getting token, current type: 32
Getting next token at position: 82
Found identifier
Token returned: 32, next token type: 26
Advanced to: 22 and 32
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 32
Getting token, current type: 26
Getting next token at position: 84
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 32 and 26
Advancing tokens from: 32 and 26
Getting token, current type: 21
Getting next token at position: 85
Found new identifier
Token returned: 21, next token type: 26
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: rt
Advancing tokens from: 26 and 21
Getting token, current type: 26
Getting next token at position: 87
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Getting token, current type: 30
Getting next token at position: 88
Found identifier
Token returned: 30, next token type: 26
Advanced to: 26 and 30
Arguments parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: uk
Advancing tokens from: 26 and 30
Getting token, current type: 26
Getting next token at position: 90
Found keyword, type: 20
Token returned: 26, next token type: 20
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Getting token, current type: 20
Getting next token at position: 91
Found number literal
Finding number
Finding number
Parsed number: 56
Token returned: 20, next token type: 22
Advanced to: 26 and 20
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing function call
Advancing tokens from: 26 and 20
Getting token, current type: 22
Getting next token at position: 93
Found keyword, type: 21
Token returned: 22, next token type: 21
Advanced to: 20 and 22
Parsing function arguments
Advancing tokens from: 20 and 22
Getting token, current type: 21
Getting next token at position: 94
Found new identifier
Token returned: 21, next token type: 26
Advanced to: 22 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 56
Advancing tokens from: 22 and 21
Getting token, current type: 26
Getting next token at position: 95
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Getting token, current type: 30
Getting next token at position: 96
Found keyword, type: 34
Token returned: 30, next token type: 34
Advanced to: 26 and 30
Arguments parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: t
Advancing tokens from: 26 and 30
Getting token, current type: 34
Getting next token at position: 101
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 30 and 34
Parsing simple assignment
Advancing tokens from: 30 and 34
Getting token, current type: 20
Getting next token at position: 102
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 104
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 21
Getting next token at position: 105
No valid token found
Token returned: 21, next token type: 24
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: uk
Advancing tokens from: 26 and 21
Getting token, current type: 24
Invalid token at position: 105
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Getting token, current type: 24
Invalid token at position: 105
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Creating function closure
Assigning to identifier: aboba
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: rt
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing function call: aboba
Function resolved, preparing to invoke
Processing argument: n
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Processing argument: m
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: rt
First operand evaluated
First operand evaluated
Processing return statement
Creating function closure
Function returned
First operand evaluated
First operand evaluated
Assigning to identifier: fr
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing function call: fr
Function resolved, preparing to invoke
Processing argument: g
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Processing return statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: g
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 56 + 1
Binary operation result type: struct Object
Operation completed
Function returned
First operand evaluated
First operand evaluated
Assigning to identifier: uk
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: uk
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Assigning to identifier: t
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: aboba
Advancing tokens from: 26 and 30
Getting token, current type: 1
Getting next token at position: 14
Found keyword, type: 20
Token returned: 1, next token type: 20
Advanced to: 30 and 1
Parsing simple assignment
Advancing tokens from: 30 and 1
Getting token, current type: 20
Getting next token at position: 15
Found new identifier
Token returned: 20, next token type: 26
Advanced to: 1 and 20
Parsing expression
Parsing function definition
Advancing tokens from: 1 and 20
Getting token, current type: 26
Getting next token at position: 16
Found keyword, type: 32
Token returned: 26, next token type: 32
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 32
Getting next token at position: 17
Found new identifier
Token returned: 32, next token type: 26
Advanced to: 26 and 32
Parsing argument: n
Advancing tokens from: 26 and 32
Getting token, current type: 26
Getting next token at position: 18
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 32 and 26
Advancing tokens from: 32 and 26
Getting token, current type: 21
Getting next token at position: 19
Found keyword, type: 2
Token returned: 21, next token type: 2
Advanced to: 26 and 21
Parsing argument: m
Advancing tokens from: 26 and 21
Getting token, current type: 2
Getting next token at position: 25
Found keyword, type: 1
Token returned: 2, next token type: 1
Advanced to: 21 and 2
Advancing tokens from: 21 and 2
Getting token, current type: 1
Getting next token at position: 33
Found keyword, type: 20
Token returned: 1, next token type: 20
Advanced to: 2 and 1
Parsing function body
Parsing statement, current token: 2, peek token: 1
Found return statement
Parsing return statement
Advancing tokens from: 2 and 1
Getting token, current type: 20
Getting next token at position: 34
Found new identifier
Token returned: 20, next token type: 26
Advanced to: 1 and 20
Parsing expression
Parsing function definition
Advancing tokens from: 1 and 20
Getting token, current type: 26
Getting next token at position: 35
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 21
Getting next token at position: 36
Found keyword, type: 2
Token returned: 21, next token type: 2
Advanced to: 26 and 21
Parsing argument: g
Advancing tokens from: 26 and 21
Getting token, current type: 2
Getting next token at position: 42
Found identifier
Token returned: 2, next token type: 26
Advanced to: 21 and 2
Advancing tokens from: 21 and 2
Getting token, current type: 26
Getting next token at position: 43
Found keyword, type: 7
Token returned: 26, next token type: 7
Advanced to: 2 and 26
Parsing function body
Parsing statement, current token: 2, peek token: 26
Found return statement
Parsing return statement
Advancing tokens from: 2 and 26
Getting token, current type: 7
Getting next token at position: 44
Found number literal
Finding number
Parsed number: 1
Token returned: 7, next token type: 22
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: g
Advancing tokens from: 26 and 7
Getting token, current type: 22
Getting next token at position: 45
Found keyword, type: 33
Token returned: 22, next token type: 33
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Getting token, current type: 33
Getting next token at position: 56
Found keyword, type: 33
Token returned: 33, next token type: 33
Advanced to: 22 and 33
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 33
Getting token, current type: 33
Getting next token at position: 67
Found new identifier
Token returned: 33, next token type: 26
Advanced to: 33 and 33
Advancing tokens from: 33 and 33
Getting token, current type: 26
Getting next token at position: 69
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 33 and 26
Function parsing completed
Advancing tokens from: 33 and 26
Getting token, current type: 30
Getting next token at position: 70
Found number literal
Finding number
Parsed number: 5
Token returned: 30, next token type: 22
Advanced to: 26 and 30
Function parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: rt
Advancing tokens from: 26 and 30
Getting token, current type: 22
Getting next token at position: 71
Found new identifier
Token returned: 22, next token type: 26
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Getting token, current type: 26
Getting next token at position: 73
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 22 and 26
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 5
Advancing tokens from: 22 and 26
Getting token, current type: 30
Getting next token at position: 74
Found identifier
Token returned: 30, next token type: 26
Advanced to: 26 and 30
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: fr
Advancing tokens from: 26 and 30
Getting token, current type: 26
Getting next token at position: 79
Found keyword, type: 20
Token returned: 26, next token type: 20
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Getting token, current type: 20
Getting next token at position: 80
Found number literal
Finding number
Parsed number: 3
Token returned: 20, next token type: 22
Advanced to: 26 and 20
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing function call
Advancing tokens from: 26 and 20
Getting token, current type: 22
Getting next token at position: 81
Found keyword, type: 32
Token returned: 22, next token type: 32
Advanced to: 20 and 22
Parsing function arguments
Advancing tokens from: 20 and 22
Getting token, current type: 32
Getting next token at position: 82
Found identifier
Token returned: 32, next token type: 26
Advanced to: 22 and 32
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 32
Getting token, current type: 26
Getting next token at position: 84
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 32 and 26
Advancing tokens from: 32 and 26
Getting token, current type: 21
Getting next token at position: 85
Found new identifier
Token returned: 21, next token type: 26
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: rt
Advancing tokens from: 26 and 21
Getting token, current type: 26
Getting next token at position: 87
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Getting token, current type: 30
Getting next token at position: 88
Found identifier
Token returned: 30, next token type: 26
Advanced to: 26 and 30
Arguments parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: uk
Advancing tokens from: 26 and 30
Getting token, current type: 26
Getting next token at position: 90
Found keyword, type: 20
Token returned: 26, next token type: 20
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Getting token, current type: 20
Getting next token at position: 91
Found number literal
Finding number
Finding number
Parsed number: 56
Token returned: 20, next token type: 22
Advanced to: 26 and 20
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing function call
Advancing tokens from: 26 and 20
Getting token, current type: 22
Getting next token at position: 93
Found keyword, type: 21
Token returned: 22, next token type: 21
Advanced to: 20 and 22
Parsing function arguments
Advancing tokens from: 20 and 22
Getting token, current type: 21
Getting next token at position: 94
Found new identifier
Token returned: 21, next token type: 26
Advanced to: 22 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 56
Advancing tokens from: 22 and 21
Getting token, current type: 26
Getting next token at position: 95
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Getting token, current type: 30
Getting next token at position: 96
Found identifier
Token returned: 30, next token type: 26
Advanced to: 26 and 30
Arguments parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: t
Advancing tokens from: 26 and 30
Getting token, current type: 26
Getting next token at position: 98
Found keyword, type: 3
Token returned: 26, next token type: 3
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Getting token, current type: 3
Getting next token at position: 100
Found keyword, type: 20
Token returned: 3, next token type: 20
Advanced to: 26 and 3
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: uk
Advancing tokens from: 26 and 3
Getting token, current type: 20
Getting next token at position: 101
Found identifier
Token returned: 20, next token type: 26
Advanced to: 3 and 20
Statement parsed, current token: 3
Parsing next statement
Parsing statement, current token: 3, peek token: 20
Found if statement
Parsing if statement
Advancing tokens from: 3 and 20
Getting token, current type: 26
Getting next token at position: 102
Found keyword, type: 8
Token returned: 26, next token type: 8
Advanced to: 20 and 26
Parsing if condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 26
Getting token, current type: 8
Getting next token at position: 103
Found number literal
Finding number
Finding number
Parsed number: 57
Token returned: 8, next token type: 22
Advanced to: 26 and 8
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: t
Advancing tokens from: 26 and 8
Getting token, current type: 22
Getting next token at position: 105
Found keyword, type: 21
Token returned: 22, next token type: 21
Advanced to: 8 and 22
Advancing tokens from: 8 and 22
Getting token, current type: 21
Getting next token at position: 106
Found keyword, type: 25
Token returned: 21, next token type: 25
Advanced to: 22 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 57
Advancing tokens from: 22 and 21
Getting token, current type: 25
Getting next token at position: 110
Found new identifier
Token returned: 25, next token type: 26
Advanced to: 21 and 25
Advancing tokens from: 21 and 25
Getting token, current type: 26
Getting next token at position: 111
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 25 and 26
Advancing tokens from: 25 and 26
Getting token, current type: 30
Getting next token at position: 112
Found keyword, type: 34
Token returned: 30, next token type: 34
Advanced to: 26 and 30
Parsing if body
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: r
Advancing tokens from: 26 and 30
Getting token, current type: 34
Getting next token at position: 117
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 30 and 34
Parsing simple assignment
Advancing tokens from: 30 and 34
Getting token, current type: 20
Getting next token at position: 118
Found number literal
Finding number
Finding number
Parsed number: 44
Token returned: 20, next token type: 22
Advanced to: 34 and 20
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 22
Getting next token at position: 120
Found keyword, type: 21
Token returned: 22, next token type: 21
Advanced to: 20 and 22
Parsing function arguments
Advancing tokens from: 20 and 22
Getting token, current type: 21
Getting next token at position: 121
Found keyword, type: 5
Token returned: 21, next token type: 5
Advanced to: 22 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 44
Advancing tokens from: 22 and 21
Getting token, current type: 5
Getting next token at position: 125
Found identifier
Token returned: 5, next token type: 26
Advanced to: 21 and 5
Advancing tokens from: 21 and 5
Getting token, current type: 26
Getting next token at position: 126
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 5 and 26
Arguments parsing completed
Parsing else-if clauses
Parsing else clause
Advancing tokens from: 5 and 26
Getting token, current type: 30
Getting next token at position: 127
Found keyword, type: 34
Token returned: 30, next token type: 34
Advanced to: 26 and 30
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: r
Advancing tokens from: 26 and 30
Getting token, current type: 34
Getting next token at position: 132
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 30 and 34
Parsing simple assignment
Advancing tokens from: 30 and 34
Getting token, current type: 20
Getting next token at position: 133
Found string literal
Token returned: 20, next token type: 23
Advanced to: 34 and 20
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 23
Getting next token at position: 141
Found keyword, type: 21
Token returned: 23, next token type: 21
Advanced to: 20 and 23
Parsing function arguments
Advancing tokens from: 20 and 23
Getting token, current type: 21
Getting next token at position: 142
Found keyword, type: 31
Token returned: 21, next token type: 31
Advanced to: 23 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 21
Getting token, current type: 31
Getting next token at position: 147
No valid token found
Token returned: 31, next token type: 24
Advanced to: 21 and 31
Advancing tokens from: 21 and 31
Getting token, current type: 24
Invalid token at position: 147
Advanced to: 31 and 24
Arguments parsing completed
Advancing tokens from: 31 and 24
Getting token, current type: 24
Invalid token at position: 147
Advanced to: 24 and 24
If statement parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Creating function closure
Assigning to identifier: aboba
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: rt
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing function call: aboba
Function resolved, preparing to invoke
Processing argument: n
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Processing argument: m
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: rt
First operand evaluated
First operand evaluated
Processing return statement
Creating function closure
Function returned
First operand evaluated
First operand evaluated
Assigning to identifier: fr
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing function call: fr
Function resolved, preparing to invoke
Processing argument: g
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Processing return statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: g
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 56 + 1
Binary operation result type: struct Object
Operation completed
Function returned
First operand evaluated
First operand evaluated
Assigning to identifier: uk
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: uk
First operand evaluated
First operand evaluated
Assigning to identifier: t
Evaluating statement
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: t
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Assigning to identifier: r
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: i
Advancing tokens from: 26 and 30
Getting token, current type: 22
Getting next token at position: 3
Found keyword, type: 28
Token returned: 22, next token type: 28
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Getting token, current type: 28
Getting next token at position: 8
Found keyword, type: 20
Token returned: 28, next token type: 20
Advanced to: 22 and 28
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 28
Getting token, current type: 20
Getting next token at position: 9
Found identifier
Token returned: 20, next token type: 26
Advanced to: 28 and 20
Statement parsed, current token: 28
Parsing next statement
Parsing statement, current token: 28, peek token: 20
Found while statement
Parsing while statement
Advancing tokens from: 28 and 20
Getting token, current type: 26
Getting next token at position: 10
Found keyword, type: 8
Token returned: 26, next token type: 8
Advanced to: 20 and 26
Parsing while condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 26
Getting token, current type: 8
Getting next token at position: 11
Found number literal
Finding number
Finding number
Parsed number: 10
Token returned: 8, next token type: 22
Advanced to: 26 and 8
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 8
Getting token, current type: 22
Getting next token at position: 13
Found keyword, type: 21
Token returned: 22, next token type: 21
Advanced to: 8 and 22
Advancing tokens from: 8 and 22
Getting token, current type: 21
Getting next token at position: 14
Found identifier
Token returned: 21, next token type: 26
Advanced to: 22 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 10
Advancing tokens from: 22 and 21
Getting token, current type: 26
Getting next token at position: 15
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Getting token, current type: 30
Getting next token at position: 16
Found identifier
Token returned: 30, next token type: 26
Advanced to: 26 and 30
Parsing while body
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: i
Advancing tokens from: 26 and 30
Getting token, current type: 26
Getting next token at position: 17
Found keyword, type: 7
Token returned: 26, next token type: 7
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Getting token, current type: 7
Getting next token at position: 18
Found number literal
Finding number
Parsed number: 1
Token returned: 7, next token type: 22
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 7
Getting token, current type: 22
Getting next token at position: 19
Found keyword, type: 35
Token returned: 22, next token type: 35
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Getting token, current type: 35
Getting next token at position: 27
Found keyword, type: 34
Token returned: 35, next token type: 34
Advanced to: 22 and 35
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 35
Getting token, current type: 34
Getting next token at position: 32
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 35 and 34
Advancing tokens from: 35 and 34
Getting token, current type: 20
Getting next token at position: 33
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
While statement parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 34
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 21
Getting next token at position: 35
No valid token found
Token returned: 21, next token type: 24
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 21
Getting token, current type: 24
Invalid token at position: 35
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Getting token, current type: 24
Invalid token at position: 35
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: i
Evaluating statement
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 0 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 1 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 2 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 3 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 4 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 5 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 6 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 7 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 8 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 9 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: i
Advancing tokens from: 26 and 30
Getting token, current type: 22
Getting next token at position: 3
Found keyword, type: 28
Token returned: 22, next token type: 28
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Getting token, current type: 28
Getting next token at position: 8
Found keyword, type: 20
Token returned: 28, next token type: 20
Advanced to: 22 and 28
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 28
Getting token, current type: 20
Getting next token at position: 9
Found identifier
Token returned: 20, next token type: 26
Advanced to: 28 and 20
Statement parsed, current token: 28
Parsing next statement
Parsing statement, current token: 28, peek token: 20
Found while statement
Parsing while statement
Advancing tokens from: 28 and 20
Getting token, current type: 26
Getting next token at position: 10
Found keyword, type: 8
Token returned: 26, next token type: 8
Advanced to: 20 and 26
Parsing while condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 26
Getting token, current type: 8
Getting next token at position: 11
Found number literal
Finding number
Finding number
Parsed number: 10
Token returned: 8, next token type: 22
Advanced to: 26 and 8
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 8
Getting token, current type: 22
Getting next token at position: 13
Found keyword, type: 21
Token returned: 22, next token type: 21
Advanced to: 8 and 22
Advancing tokens from: 8 and 22
Getting token, current type: 21
Getting next token at position: 14
Found keyword, type: 34
Token returned: 21, next token type: 34
Advanced to: 22 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 10
Advancing tokens from: 22 and 21
Getting token, current type: 34
Getting next token at position: 19
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 21 and 34
Advancing tokens from: 21 and 34
Getting token, current type: 20
Getting next token at position: 20
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Parsing while body
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 21
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 21
Getting next token at position: 22
Found new identifier
Token returned: 21, next token type: 26
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 21
Getting token, current type: 26
Getting next token at position: 23
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Getting token, current type: 30
Getting next token at position: 24
Found number literal
Finding number
Parsed number: 0
Token returned: 30, next token type: 22
Advanced to: 26 and 30
Arguments parsing completed
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: j
Advancing tokens from: 26 and 30
Getting token, current type: 22
Getting next token at position: 25
Found keyword, type: 28
Token returned: 22, next token type: 28
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Getting token, current type: 28
Getting next token at position: 30
Found keyword, type: 20
Token returned: 28, next token type: 20
Advanced to: 22 and 28
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 28
Getting token, current type: 20
Getting next token at position: 31
Found identifier
Token returned: 20, next token type: 26
Advanced to: 28 and 20
Parsing statement, current token: 28, peek token: 20
Found while statement
Parsing while statement
Advancing tokens from: 28 and 20
Getting token, current type: 26
Getting next token at position: 32
Found keyword, type: 8
Token returned: 26, next token type: 8
Advanced to: 20 and 26
Parsing while condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 26
Getting token, current type: 8
Getting next token at position: 33
Found number literal
Finding number
Parsed number: 2
Token returned: 8, next token type: 22
Advanced to: 26 and 8
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: j
Advancing tokens from: 26 and 8
Getting token, current type: 22
Getting next token at position: 34
Found keyword, type: 21
Token returned: 22, next token type: 21
Advanced to: 8 and 22
Advancing tokens from: 8 and 22
Getting token, current type: 21
Getting next token at position: 35
Found identifier
Token returned: 21, next token type: 26
Advanced to: 22 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 21
Getting token, current type: 26
Getting next token at position: 36
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Getting token, current type: 30
Getting next token at position: 37
Found identifier
Token returned: 30, next token type: 26
Advanced to: 26 and 30
Parsing while body
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: j
Advancing tokens from: 26 and 30
Getting token, current type: 26
Getting next token at position: 38
Found keyword, type: 7
Token returned: 26, next token type: 7
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Getting token, current type: 7
Getting next token at position: 39
Found number literal
Finding number
Parsed number: 1
Token returned: 7, next token type: 22
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: j
Advancing tokens from: 26 and 7
Getting token, current type: 22
Getting next token at position: 40
Found keyword, type: 34
Token returned: 22, next token type: 34
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Getting token, current type: 34
Getting next token at position: 45
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 22 and 34
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 34
Getting token, current type: 20
Getting next token at position: 46
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 47
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 21
Getting next token at position: 48
Found keyword, type: 35
Token returned: 21, next token type: 35
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: j
Advancing tokens from: 26 and 21
Getting token, current type: 35
Getting next token at position: 56
Found identifier
Token returned: 35, next token type: 26
Advanced to: 21 and 35
Advancing tokens from: 21 and 35
Getting token, current type: 26
Getting next token at position: 57
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 35 and 26
Arguments parsing completed
Advancing tokens from: 35 and 26
Getting token, current type: 30
Getting next token at position: 58
Found identifier
Token returned: 30, next token type: 26
Advanced to: 26 and 30
While statement parsing completed
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: i
Advancing tokens from: 26 and 30
Getting token, current type: 26
Getting next token at position: 59
Found keyword, type: 7
Token returned: 26, next token type: 7
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Getting token, current type: 7
Getting next token at position: 60
Found number literal
Finding number
Parsed number: 1
Token returned: 7, next token type: 22
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 7
Getting token, current type: 22
Getting next token at position: 61
Found keyword, type: 35
Token returned: 22, next token type: 35
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Getting token, current type: 35
Getting next token at position: 69
Found keyword, type: 34
Token returned: 35, next token type: 34
Advanced to: 22 and 35
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 35
Getting token, current type: 34
Getting next token at position: 74
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 35 and 34
Advancing tokens from: 35 and 34
Getting token, current type: 20
Getting next token at position: 75
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
While statement parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 76
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 21
Getting next token at position: 77
No valid token found
Token returned: 21, next token type: 24
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 21
Getting token, current type: 24
Invalid token at position: 77
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Getting token, current type: 24
Invalid token at position: 77
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: i
Evaluating statement
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 0 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 1 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 0 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 0 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 1 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 1 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 0 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 1 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 2 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 0 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 1 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 3 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 0 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 1 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 4 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 0 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 1 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 5 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 0 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 1 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 6 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 0 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 1 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 7 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 0 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 1 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 8 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 0 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 1 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 9 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: i
Advancing tokens from: 26 and 30
Getting token, current type: 22
Getting next token at position: 3
Found keyword, type: 28
Token returned: 22, next token type: 28
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Getting token, current type: 28
Getting next token at position: 8
Found keyword, type: 20
Token returned: 28, next token type: 20
Advanced to: 22 and 28
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 28
Getting token, current type: 20
Getting next token at position: 9
Found number literal
Finding number
Parsed number: 1
Token returned: 20, next token type: 22
Advanced to: 28 and 20
Statement parsed, current token: 28
Parsing next statement
Parsing statement, current token: 28, peek token: 20
Found while statement
Parsing while statement
Advancing tokens from: 28 and 20
Getting token, current type: 22
Getting next token at position: 10
Found keyword, type: 21
Token returned: 22, next token type: 21
Advanced to: 20 and 22
Parsing while condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 22
Getting token, current type: 21
Getting next token at position: 11
Found identifier
Token returned: 21, next token type: 26
Advanced to: 22 and 21
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 21
Getting token, current type: 26
Getting next token at position: 12
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Getting token, current type: 30
Getting next token at position: 13
Found identifier
Token returned: 30, next token type: 26
Advanced to: 26 and 30
Parsing while body
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: i
Advancing tokens from: 26 and 30
Getting token, current type: 26
Getting next token at position: 14
Found keyword, type: 7
Token returned: 26, next token type: 7
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Getting token, current type: 7
Getting next token at position: 15
Found number literal
Finding number
Parsed number: 1
Token returned: 7, next token type: 22
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 7
Getting token, current type: 22
Getting next token at position: 16
Found keyword, type: 3
Token returned: 22, next token type: 3
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Getting token, current type: 3
Getting next token at position: 18
Found keyword, type: 20
Token returned: 3, next token type: 20
Advanced to: 22 and 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 3
Getting token, current type: 20
Getting next token at position: 19
Found keyword, type: 20
Token returned: 20, next token type: 20
Advanced to: 3 and 20
Parsing statement, current token: 3, peek token: 20
Found if statement
Parsing if statement
Advancing tokens from: 3 and 20
Getting token, current type: 20
Getting next token at position: 20
Found identifier
Token returned: 20, next token type: 26
Advanced to: 20 and 20
Parsing if condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 20
Getting token, current type: 26
Getting next token at position: 21
Found keyword, type: 8
Token returned: 26, next token type: 8
Advanced to: 20 and 26
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 26
Getting token, current type: 8
Getting next token at position: 22
Found number literal
Finding number
Parsed number: 5
Token returned: 8, next token type: 22
Advanced to: 26 and 8
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 8
Getting token, current type: 22
Getting next token at position: 23
Found keyword, type: 21
Token returned: 22, next token type: 21
Advanced to: 8 and 22
Advancing tokens from: 8 and 22
Getting token, current type: 21
Getting next token at position: 24
Found keyword, type: 21
Token returned: 21, next token type: 21
Advanced to: 22 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 5
Advancing tokens from: 22 and 21
Getting token, current type: 21
Getting next token at position: 25
Found number literal
Finding number
Parsed number: 7
Token returned: 21, next token type: 22
Advanced to: 21 and 21
Advancing tokens from: 21 and 21
Getting token, current type: 22
Getting next token at position: 26
Found keyword, type: 5
Token returned: 22, next token type: 5
Advanced to: 21 and 22
Advancing tokens from: 21 and 22
Getting token, current type: 5
Getting next token at position: 30
Found keyword, type: 39
Token returned: 5, next token type: 39
Advanced to: 22 and 5
Error: missing 'then' keyword
Parsing if body
Parsing statement, current token: 22, peek token: 5
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 7
Advancing tokens from: 22 and 5
Getting token, current type: 39
Getting next token at position: 35
Found keyword, type: 31
Token returned: 39, next token type: 31
Advanced to: 5 and 39
Parsing else-if clauses
Parsing else clause
Advancing tokens from: 5 and 39
Getting token, current type: 31
Getting next token at position: 40
Found keyword, type: 34
Token returned: 31, next token type: 34
Advanced to: 39 and 31
Parsing statement, current token: 39, peek token: 31
Found break statement
Advancing tokens from: 39 and 31
Getting token, current type: 34
Getting next token at position: 45
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 31 and 34
Advancing tokens from: 31 and 34
Getting token, current type: 20
Getting next token at position: 46
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
If statement parsing completed
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 47
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 21
Getting next token at position: 48
Found keyword, type: 35
Token returned: 21, next token type: 35
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 21
Getting token, current type: 35
Getting next token at position: 56
Found keyword, type: 34
Token returned: 35, next token type: 34
Advanced to: 21 and 35
Advancing tokens from: 21 and 35
Getting token, current type: 34
Getting next token at position: 61
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 35 and 34
Arguments parsing completed
Advancing tokens from: 35 and 34
Getting token, current type: 20
Getting next token at position: 62
Found string literal
Token returned: 20, next token type: 23
Advanced to: 34 and 20
While statement parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 23
Getting next token at position: 68
Found keyword, type: 21
Token returned: 23, next token type: 21
Advanced to: 20 and 23
Parsing function arguments
Advancing tokens from: 20 and 23
Getting token, current type: 21
Getting next token at position: 69
No valid token found
Token returned: 21, next token type: 24
Advanced to: 23 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 21
Getting token, current type: 24
Invalid token at position: 69
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Getting token, current type: 24
Invalid token at position: 69
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: i
Evaluating statement
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 0 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 1 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 2 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 3 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 4 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating break statement
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: i
Advancing tokens from: 26 and 30
Getting token, current type: 22
Getting next token at position: 3
Found keyword, type: 28
Token returned: 22, next token type: 28
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Getting token, current type: 28
Getting next token at position: 8
Found keyword, type: 20
Token returned: 28, next token type: 20
Advanced to: 22 and 28
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 28
Getting token, current type: 20
Getting next token at position: 9
Found identifier
Token returned: 20, next token type: 26
Advanced to: 28 and 20
Statement parsed, current token: 28
Parsing next statement
Parsing statement, current token: 28, peek token: 20
Found while statement
Parsing while statement
Advancing tokens from: 28 and 20
Getting token, current type: 26
Getting next token at position: 10
Found keyword, type: 8
Token returned: 26, next token type: 8
Advanced to: 20 and 26
Parsing while condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 26
Getting token, current type: 8
Getting next token at position: 11
Found number literal
Finding number
Parsed number: 5
Token returned: 8, next token type: 22
Advanced to: 26 and 8
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 8
Getting token, current type: 22
Getting next token at position: 12
Found keyword, type: 21
Token returned: 22, next token type: 21
Advanced to: 8 and 22
Advancing tokens from: 8 and 22
Getting token, current type: 21
Getting next token at position: 13
Found identifier
Token returned: 21, next token type: 26
Advanced to: 22 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 5
Advancing tokens from: 22 and 21
Getting token, current type: 26
Getting next token at position: 14
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Getting token, current type: 30
Getting next token at position: 15
Found identifier
Token returned: 30, next token type: 26
Advanced to: 26 and 30
Parsing while body
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: i
Advancing tokens from: 26 and 30
Getting token, current type: 26
Getting next token at position: 16
Found keyword, type: 7
Token returned: 26, next token type: 7
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Getting token, current type: 7
Getting next token at position: 17
Found number literal
Finding number
Parsed number: 1
Token returned: 7, next token type: 22
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 7
Getting token, current type: 22
Getting next token at position: 18
Found keyword, type: 3
Token returned: 22, next token type: 3
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Getting token, current type: 3
Getting next token at position: 20
Found keyword, type: 20
Token returned: 3, next token type: 20
Advanced to: 22 and 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 3
Getting token, current type: 20
Getting next token at position: 21
Found identifier
Token returned: 20, next token type: 26
Advanced to: 3 and 20
Parsing statement, current token: 3, peek token: 20
Found if statement
Parsing if statement
Advancing tokens from: 3 and 20
Getting token, current type: 26
Getting next token at position: 22
Found keyword, type: 8
Token returned: 26, next token type: 8
Advanced to: 20 and 26
Parsing if condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 26
Getting token, current type: 8
Getting next token at position: 23
Found number literal
Finding number
Parsed number: 3
Token returned: 8, next token type: 22
Advanced to: 26 and 8
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 8
Getting token, current type: 22
Getting next token at position: 24
Found keyword, type: 21
Token returned: 22, next token type: 21
Advanced to: 8 and 22
Advancing tokens from: 8 and 22
Getting token, current type: 21
Getting next token at position: 25
Found keyword, type: 40
Token returned: 21, next token type: 40
Advanced to: 22 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 21
Getting token, current type: 40
Getting next token at position: 33
Found keyword, type: 31
Token returned: 40, next token type: 31
Advanced to: 21 and 40
Advancing tokens from: 21 and 40
Getting token, current type: 31
Getting next token at position: 38
Found keyword, type: 34
Token returned: 31, next token type: 34
Advanced to: 40 and 31
Error: missing 'then' keyword
Parsing if body
Parsing statement, current token: 40, peek token: 31
Found continue statement
Advancing tokens from: 40 and 31
Getting token, current type: 34
Getting next token at position: 43
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 31 and 34
Parsing else-if clauses
Parsing else clause
Advancing tokens from: 31 and 34
Getting token, current type: 20
Getting next token at position: 44
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
If statement parsing completed
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 45
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 21
Getting next token at position: 46
Found keyword, type: 35
Token returned: 21, next token type: 35
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 21
Getting token, current type: 35
Getting next token at position: 54
Found keyword, type: 34
Token returned: 35, next token type: 34
Advanced to: 21 and 35
Advancing tokens from: 21 and 35
Getting token, current type: 34
Getting next token at position: 59
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 35 and 34
Arguments parsing completed
Advancing tokens from: 35 and 34
Getting token, current type: 20
Getting next token at position: 60
Found string literal
Token returned: 20, next token type: 23
Advanced to: 34 and 20
While statement parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 23
Getting next token at position: 65
Found keyword, type: 21
Token returned: 23, next token type: 21
Advanced to: 20 and 23
Parsing function arguments
Advancing tokens from: 20 and 23
Getting token, current type: 21
Getting next token at position: 66
No valid token found
Token returned: 21, next token type: 24
Advanced to: 23 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 21
Getting token, current type: 24
Invalid token at position: 66
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Getting token, current type: 24
Invalid token at position: 66
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: i
Evaluating statement
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 0 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Evaluating continue statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 1 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Evaluating continue statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 2 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 3 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Evaluating continue statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 4 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Evaluating continue statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: i
Advancing tokens from: 26 and 30
Getting token, current type: 22
Getting next token at position: 3
Found keyword, type: 28
Token returned: 22, next token type: 28
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Getting token, current type: 28
Getting next token at position: 8
Found keyword, type: 20
Token returned: 28, next token type: 20
Advanced to: 22 and 28
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 28
Getting token, current type: 20
Getting next token at position: 9
Found identifier
Token returned: 20, next token type: 26
Advanced to: 28 and 20
Statement parsed, current token: 28
Parsing next statement
Parsing statement, current token: 28, peek token: 20
Found while statement
Parsing while statement
Advancing tokens from: 28 and 20
Getting token, current type: 26
Getting next token at position: 10
Found keyword, type: 8
Token returned: 26, next token type: 8
Advanced to: 20 and 26
Parsing while condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 26
Getting token, current type: 8
Getting next token at position: 11
Found number literal
Finding number
Parsed number: 3
Token returned: 8, next token type: 22
Advanced to: 26 and 8
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 8
Getting token, current type: 22
Getting next token at position: 12
Found keyword, type: 21
Token returned: 22, next token type: 21
Advanced to: 8 and 22
Advancing tokens from: 8 and 22
Getting token, current type: 21
Getting next token at position: 13
Found identifier
Token returned: 21, next token type: 26
Advanced to: 22 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 21
Getting token, current type: 26
Getting next token at position: 14
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Getting token, current type: 30
Getting next token at position: 15
Found identifier
Token returned: 30, next token type: 26
Advanced to: 26 and 30
Parsing while body
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: i
Advancing tokens from: 26 and 30
Getting token, current type: 26
Getting next token at position: 16
Found keyword, type: 7
Token returned: 26, next token type: 7
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Getting token, current type: 7
Getting next token at position: 17
Found number literal
Finding number
Parsed number: 1
Token returned: 7, next token type: 22
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 7
Getting token, current type: 22
Getting next token at position: 18
Found new identifier
Token returned: 22, next token type: 26
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Getting token, current type: 26
Getting next token at position: 19
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 22 and 26
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 26
Getting token, current type: 30
Getting next token at position: 20
Found number literal
Finding number
Parsed number: 0
Token returned: 30, next token type: 22
Advanced to: 26 and 30
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: j
Advancing tokens from: 26 and 30
Getting token, current type: 22
Getting next token at position: 21
Found keyword, type: 28
Token returned: 22, next token type: 28
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Getting token, current type: 28
Getting next token at position: 26
Found keyword, type: 20
Token returned: 28, next token type: 20
Advanced to: 22 and 28
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 28
Getting token, current type: 20
Getting next token at position: 27
Found identifier
Token returned: 20, next token type: 26
Advanced to: 28 and 20
Parsing statement, current token: 28, peek token: 20
Found while statement
Parsing while statement
Advancing tokens from: 28 and 20
Getting token, current type: 26
Getting next token at position: 28
Found keyword, type: 8
Token returned: 26, next token type: 8
Advanced to: 20 and 26
Parsing while condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 26
Getting token, current type: 8
Getting next token at position: 29
Found number literal
Finding number
Parsed number: 4
Token returned: 8, next token type: 22
Advanced to: 26 and 8
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: j
Advancing tokens from: 26 and 8
Getting token, current type: 22
Getting next token at position: 30
Found keyword, type: 21
Token returned: 22, next token type: 21
Advanced to: 8 and 22
Advancing tokens from: 8 and 22
Getting token, current type: 21
Getting next token at position: 31
Found identifier
Token returned: 21, next token type: 26
Advanced to: 22 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 4
Advancing tokens from: 22 and 21
Getting token, current type: 26
Getting next token at position: 32
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Getting token, current type: 30
Getting next token at position: 33
Found identifier
Token returned: 30, next token type: 26
Advanced to: 26 and 30
Parsing while body
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: j
Advancing tokens from: 26 and 30
Getting token, current type: 26
Getting next token at position: 34
Found keyword, type: 7
Token returned: 26, next token type: 7
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Getting token, current type: 7
Getting next token at position: 35
Found number literal
Finding number
Parsed number: 1
Token returned: 7, next token type: 22
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: j
Advancing tokens from: 26 and 7
Getting token, current type: 22
Getting next token at position: 36
Found keyword, type: 3
Token returned: 22, next token type: 3
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Getting token, current type: 3
Getting next token at position: 38
Found keyword, type: 20
Token returned: 3, next token type: 20
Advanced to: 22 and 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 3
Getting token, current type: 20
Getting next token at position: 39
Found identifier
Token returned: 20, next token type: 26
Advanced to: 3 and 20
Parsing statement, current token: 3, peek token: 20
Found if statement
Parsing if statement
Advancing tokens from: 3 and 20
Getting token, current type: 26
Getting next token at position: 40
Found keyword, type: 8
Token returned: 26, next token type: 8
Advanced to: 20 and 26
Parsing if condition
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 26
Getting token, current type: 8
Getting next token at position: 41
Found number literal
Finding number
Parsed number: 3
Token returned: 8, next token type: 22
Advanced to: 26 and 8
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: j
Advancing tokens from: 26 and 8
Getting token, current type: 22
Getting next token at position: 42
Found keyword, type: 21
Token returned: 22, next token type: 21
Advanced to: 8 and 22
Advancing tokens from: 8 and 22
Getting token, current type: 21
Getting next token at position: 43
Found number literal
Finding number
Parsed number: 7
Token returned: 21, next token type: 22
Advanced to: 22 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 21
Getting token, current type: 22
Getting next token at position: 44
Found keyword, type: 5
Token returned: 22, next token type: 5
Advanced to: 21 and 22
Advancing tokens from: 21 and 22
Getting token, current type: 5
Getting next token at position: 48
Found keyword, type: 39
Token returned: 5, next token type: 39
Advanced to: 22 and 5
Error: missing 'then' keyword
Parsing if body
Parsing statement, current token: 22, peek token: 5
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 7
Advancing tokens from: 22 and 5
Getting token, current type: 39
Getting next token at position: 53
Found keyword, type: 31
Token returned: 39, next token type: 31
Advanced to: 5 and 39
Parsing else-if clauses
Parsing else clause
Advancing tokens from: 5 and 39
Getting token, current type: 31
Getting next token at position: 58
Found keyword, type: 34
Token returned: 31, next token type: 34
Advanced to: 39 and 31
Parsing statement, current token: 39, peek token: 31
Found break statement
Advancing tokens from: 39 and 31
Getting token, current type: 34
Getting next token at position: 63
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 31 and 34
Advancing tokens from: 31 and 34
Getting token, current type: 20
Getting next token at position: 64
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
If statement parsing completed
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 65
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 21
Getting next token at position: 66
Found keyword, type: 35
Token returned: 21, next token type: 35
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: j
Advancing tokens from: 26 and 21
Getting token, current type: 35
Getting next token at position: 74
Found keyword, type: 34
Token returned: 35, next token type: 34
Advanced to: 21 and 35
Advancing tokens from: 21 and 35
Getting token, current type: 34
Getting next token at position: 79
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 35 and 34
Arguments parsing completed
Advancing tokens from: 35 and 34
Getting token, current type: 20
Getting next token at position: 80
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
While statement parsing completed
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 81
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 21
Getting next token at position: 82
Found keyword, type: 35
Token returned: 21, next token type: 35
Advanced to: 26 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 21
Getting token, current type: 35
Getting next token at position: 90
No valid token found
Token returned: 35, next token type: 24
Advanced to: 21 and 35
Advancing tokens from: 21 and 35
Getting token, current type: 24
Invalid token at position: 90
Advanced to: 35 and 24
Arguments parsing completed
Advancing tokens from: 35 and 24
Getting token, current type: 24
Invalid token at position: 90
Advanced to: 24 and 24
While statement parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: i
Evaluating statement
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 0 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 0 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 1 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 2 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Evaluating break statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 1 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 0 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 1 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 2 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Evaluating break statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 2 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: i
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: j
Processing while statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 0 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 1 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Executing while body
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 2 + 1
Binary operation result type: struct Object
Operation completed
Assigning to identifier: j
Evaluating if statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: j
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Evaluating break statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: a
Advancing tokens from: 26 and 30
Getting token, current type: 36
Getting next token at position: 3
Found number literal
Finding number
Parsed number: 1
Token returned: 36, next token type: 22
Advanced to: 30 and 36
Parsing simple assignment
Advancing tokens from: 30 and 36
Getting token, current type: 22
Getting next token at position: 4
Found keyword, type: 32
Token returned: 22, next token type: 32
Advanced to: 36 and 22
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 36
Parsing array literal
Advancing tokens from: 36 and 22
Getting token, current type: 32
Getting next token at position: 5
Found number literal
Finding number
Parsed number: 2
Token returned: 32, next token type: 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 32
Getting token, current type: 22
Getting next token at position: 6
Found keyword, type: 32
Token returned: 22, next token type: 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Getting token, current type: 32
Getting next token at position: 7
Found number literal
Finding number
Parsed number: 3
Token returned: 32, next token type: 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 32
Getting token, current type: 22
Getting next token at position: 8
Found keyword, type: 32
Token returned: 22, next token type: 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Getting token, current type: 32
Getting next token at position: 9
Found number literal
Finding number
Parsed number: 4
Token returned: 32, next token type: 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 32
Getting token, current type: 22
Getting next token at position: 10
Found keyword, type: 32
Token returned: 22, next token type: 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Getting token, current type: 32
Getting next token at position: 11
Found number literal
Finding number
Parsed number: 5
Token returned: 32, next token type: 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 4
Advancing tokens from: 22 and 32
Getting token, current type: 22
Getting next token at position: 12
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Getting token, current type: 37
Getting next token at position: 13
Found keyword, type: 34
Token returned: 37, next token type: 34
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 5
Advancing tokens from: 22 and 37
Getting token, current type: 34
Getting next token at position: 18
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 37 and 34
Advancing tokens from: 37 and 34
Getting token, current type: 20
Getting next token at position: 19
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 20
Found keyword, type: 36
Token returned: 26, next token type: 36
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 36
Getting next token at position: 21
Found number literal
Finding number
Parsed number: 0
Token returned: 36, next token type: 22
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Getting token, current type: 22
Getting next token at position: 22
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 23
Found keyword, type: 21
Token returned: 37, next token type: 21
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 37
Getting token, current type: 21
Getting next token at position: 24
Found keyword, type: 34
Token returned: 21, next token type: 34
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Getting token, current type: 34
Getting next token at position: 29
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 21 and 34
Advancing tokens from: 21 and 34
Getting token, current type: 20
Getting next token at position: 30
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Arguments parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 31
Found keyword, type: 36
Token returned: 26, next token type: 36
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 36
Getting next token at position: 32
Found number literal
Finding number
Parsed number: 4
Token returned: 36, next token type: 22
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Getting token, current type: 22
Getting next token at position: 33
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 34
Found keyword, type: 21
Token returned: 37, next token type: 21
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 4
Advancing tokens from: 22 and 37
Getting token, current type: 21
Getting next token at position: 35
Found new identifier
Token returned: 21, next token type: 26
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Getting token, current type: 26
Getting next token at position: 37
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Getting token, current type: 30
Getting next token at position: 38
Found keyword, type: 36
Token returned: 30, next token type: 36
Advanced to: 26 and 30
Arguments parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: b2
Advancing tokens from: 26 and 30
Getting token, current type: 36
Getting next token at position: 39
Found number literal
Finding number
Finding number
Parsed number: 10
Token returned: 36, next token type: 22
Advanced to: 30 and 36
Parsing simple assignment
Advancing tokens from: 30 and 36
Getting token, current type: 22
Getting next token at position: 41
Found keyword, type: 32
Token returned: 22, next token type: 32
Advanced to: 36 and 22
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 36
Parsing array literal
Advancing tokens from: 36 and 22
Getting token, current type: 32
Getting next token at position: 42
Found number literal
Finding number
Finding number
Parsed number: 20
Token returned: 32, next token type: 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 10
Advancing tokens from: 22 and 32
Getting token, current type: 22
Getting next token at position: 44
Found keyword, type: 32
Token returned: 22, next token type: 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Getting token, current type: 32
Getting next token at position: 45
Found number literal
Finding number
Finding number
Parsed number: 30
Token returned: 32, next token type: 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 20
Advancing tokens from: 22 and 32
Getting token, current type: 22
Getting next token at position: 47
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Getting token, current type: 37
Getting next token at position: 48
Found keyword, type: 34
Token returned: 37, next token type: 34
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 30
Advancing tokens from: 22 and 37
Getting token, current type: 34
Getting next token at position: 53
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 37 and 34
Advancing tokens from: 37 and 34
Getting token, current type: 20
Getting next token at position: 54
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 56
Found keyword, type: 36
Token returned: 26, next token type: 36
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 36
Getting next token at position: 57
Found number literal
Finding number
Parsed number: 0
Token returned: 36, next token type: 22
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Getting token, current type: 22
Getting next token at position: 58
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 59
Found keyword, type: 21
Token returned: 37, next token type: 21
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 37
Getting token, current type: 21
Getting next token at position: 60
Found new identifier
Token returned: 21, next token type: 26
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Getting token, current type: 26
Getting next token at position: 61
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Getting token, current type: 30
Getting next token at position: 62
Found number literal
Finding number
Parsed number: 1
Token returned: 30, next token type: 22
Advanced to: 26 and 30
Arguments parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: i
Advancing tokens from: 26 and 30
Getting token, current type: 22
Getting next token at position: 63
Found keyword, type: 34
Token returned: 22, next token type: 34
Advanced to: 30 and 22
Parsing simple assignment
Advancing tokens from: 30 and 22
Getting token, current type: 34
Getting next token at position: 68
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 22 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 34
Getting token, current type: 20
Getting next token at position: 69
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 71
Found keyword, type: 36
Token returned: 26, next token type: 36
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 36
Getting next token at position: 72
Found identifier
Token returned: 36, next token type: 26
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Getting token, current type: 26
Getting next token at position: 73
Found keyword, type: 37
Token returned: 26, next token type: 37
Advanced to: 36 and 26
Advancing tokens from: 36 and 26
Getting token, current type: 37
Getting next token at position: 74
Found keyword, type: 21
Token returned: 37, next token type: 21
Advanced to: 26 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 37
Getting token, current type: 21
Getting next token at position: 75
Found keyword, type: 34
Token returned: 21, next token type: 34
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Getting token, current type: 34
Getting next token at position: 80
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 21 and 34
Advancing tokens from: 21 and 34
Getting token, current type: 20
Getting next token at position: 81
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Arguments parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 83
Found keyword, type: 36
Token returned: 26, next token type: 36
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 36
Getting next token at position: 84
Found identifier
Token returned: 36, next token type: 26
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Getting token, current type: 26
Getting next token at position: 85
Found keyword, type: 7
Token returned: 26, next token type: 7
Advanced to: 36 and 26
Advancing tokens from: 36 and 26
Getting token, current type: 7
Getting next token at position: 86
Found number literal
Finding number
Parsed number: 1
Token returned: 7, next token type: 22
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: i
Advancing tokens from: 26 and 7
Getting token, current type: 22
Getting next token at position: 87
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Getting token, current type: 37
Getting next token at position: 88
Found keyword, type: 21
Token returned: 37, next token type: 21
Advanced to: 22 and 37
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 37
Getting token, current type: 21
Getting next token at position: 89
No valid token found
Token returned: 21, next token type: 24
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Getting token, current type: 24
Invalid token at position: 89
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Getting token, current type: 24
Invalid token at position: 89
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Creating array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Assigning to identifier: a
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Creating array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Assigning to identifier: b2
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Assigning to identifier: i
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: i
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 1 + 1
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: arr
Advancing tokens from: 26 and 30
Getting token, current type: 36
Getting next token at position: 5
Found number literal
Finding number
Parsed number: 1
Token returned: 36, next token type: 22
Advanced to: 30 and 36
Parsing simple assignment
Advancing tokens from: 30 and 36
Getting token, current type: 22
Getting next token at position: 6
Found keyword, type: 32
Token returned: 22, next token type: 32
Advanced to: 36 and 22
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 36
Parsing array literal
Advancing tokens from: 36 and 22
Getting token, current type: 32
Getting next token at position: 7
Found string literal
Token returned: 32, next token type: 23
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 32
Getting token, current type: 23
Getting next token at position: 14
Found keyword, type: 32
Token returned: 23, next token type: 32
Advanced to: 32 and 23
Advancing tokens from: 32 and 23
Getting token, current type: 32
Getting next token at position: 15
Found keyword, type: 1
Token returned: 32, next token type: 1
Advanced to: 23 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 32
Getting token, current type: 1
Getting next token at position: 23
Found keyword, type: 20
Token returned: 1, next token type: 20
Advanced to: 32 and 1
Advancing tokens from: 32 and 1
Getting token, current type: 20
Getting next token at position: 24
Found new identifier
Token returned: 20, next token type: 26
Advanced to: 1 and 20
Parsing expression
Parsing function definition
Advancing tokens from: 1 and 20
Getting token, current type: 26
Getting next token at position: 25
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 21
Getting next token at position: 26
Found keyword, type: 2
Token returned: 21, next token type: 2
Advanced to: 26 and 21
Parsing argument: x
Advancing tokens from: 26 and 21
Getting token, current type: 2
Getting next token at position: 32
Found identifier
Token returned: 2, next token type: 26
Advanced to: 21 and 2
Advancing tokens from: 21 and 2
Getting token, current type: 26
Getting next token at position: 33
Found keyword, type: 7
Token returned: 26, next token type: 7
Advanced to: 2 and 26
Parsing function body
Parsing statement, current token: 2, peek token: 26
Found return statement
Parsing return statement
Advancing tokens from: 2 and 26
Getting token, current type: 7
Getting next token at position: 34
Found number literal
Finding number
Parsed number: 1
Token returned: 7, next token type: 22
Advanced to: 26 and 7
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: x
Advancing tokens from: 26 and 7
Getting token, current type: 22
Getting next token at position: 35
Found keyword, type: 33
Token returned: 22, next token type: 33
Advanced to: 7 and 22
Advancing tokens from: 7 and 22
Getting token, current type: 33
Getting next token at position: 46
Found keyword, type: 32
Token returned: 33, next token type: 32
Advanced to: 22 and 33
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 33
Getting token, current type: 32
Getting next token at position: 47
Found keyword, type: 36
Token returned: 32, next token type: 36
Advanced to: 33 and 32
Advancing tokens from: 33 and 32
Getting token, current type: 36
Getting next token at position: 48
Found number literal
Finding number
Parsed number: 1
Token returned: 36, next token type: 22
Advanced to: 32 and 36
Function parsing completed
Advancing tokens from: 32 and 36
Getting token, current type: 22
Getting next token at position: 49
Found keyword, type: 32
Token returned: 22, next token type: 32
Advanced to: 36 and 22
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 36
Parsing array literal
Advancing tokens from: 36 and 22
Getting token, current type: 32
Getting next token at position: 50
Found number literal
Finding number
Parsed number: 2
Token returned: 32, next token type: 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 32
Getting token, current type: 22
Getting next token at position: 51
Found keyword, type: 32
Token returned: 22, next token type: 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Getting token, current type: 32
Getting next token at position: 52
Found number literal
Finding number
Parsed number: 3
Token returned: 32, next token type: 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 32
Getting token, current type: 22
Getting next token at position: 53
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Getting token, current type: 37
Getting next token at position: 54
Found keyword, type: 32
Token returned: 37, next token type: 32
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 37
Getting token, current type: 32
Getting next token at position: 55
Found number literal
Finding number
Finding number
Finding number
Finding number
Parsed number: 2e30
Token returned: 32, next token type: 22
Advanced to: 37 and 32
Advancing tokens from: 37 and 32
Getting token, current type: 22
Getting next token at position: 59
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Getting token, current type: 37
Getting next token at position: 60
Found keyword, type: 34
Token returned: 37, next token type: 34
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2e30
Advancing tokens from: 22 and 37
Getting token, current type: 34
Getting next token at position: 65
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 37 and 34
Advancing tokens from: 37 and 34
Getting token, current type: 20
Getting next token at position: 66
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 69
Found keyword, type: 36
Token returned: 26, next token type: 36
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 36
Getting next token at position: 70
Found number literal
Finding number
Parsed number: 0
Token returned: 36, next token type: 22
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Getting token, current type: 22
Getting next token at position: 71
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 72
Found keyword, type: 21
Token returned: 37, next token type: 21
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 37
Getting token, current type: 21
Getting next token at position: 73
Found keyword, type: 34
Token returned: 21, next token type: 34
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Getting token, current type: 34
Getting next token at position: 78
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 21 and 34
Advancing tokens from: 21 and 34
Getting token, current type: 20
Getting next token at position: 79
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Arguments parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 82
Found keyword, type: 36
Token returned: 26, next token type: 36
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 36
Getting next token at position: 83
Found number literal
Finding number
Parsed number: 1
Token returned: 36, next token type: 22
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Getting token, current type: 22
Getting next token at position: 84
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 85
Found keyword, type: 21
Token returned: 37, next token type: 21
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 37
Getting token, current type: 21
Getting next token at position: 86
Found new identifier
Token returned: 21, next token type: 26
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Getting token, current type: 26
Getting next token at position: 87
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Getting token, current type: 30
Getting next token at position: 88
Found identifier
Token returned: 30, next token type: 26
Advanced to: 26 and 30
Arguments parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: f
Advancing tokens from: 26 and 30
Getting token, current type: 26
Getting next token at position: 91
Found keyword, type: 36
Token returned: 26, next token type: 36
Advanced to: 30 and 26
Parsing simple assignment
Advancing tokens from: 30 and 26
Getting token, current type: 36
Getting next token at position: 92
Found number literal
Finding number
Parsed number: 2
Token returned: 36, next token type: 22
Advanced to: 26 and 36
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Getting token, current type: 22
Getting next token at position: 93
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 94
Found keyword, type: 34
Token returned: 37, next token type: 34
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 37
Getting token, current type: 34
Getting next token at position: 99
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 37 and 34
Advancing tokens from: 37 and 34
Getting token, current type: 20
Getting next token at position: 100
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 101
Found keyword, type: 20
Token returned: 26, next token type: 20
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 20
Getting next token at position: 102
Found number literal
Finding number
Parsed number: 5
Token returned: 20, next token type: 22
Advanced to: 26 and 20
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing function call
Advancing tokens from: 26 and 20
Getting token, current type: 22
Getting next token at position: 103
Found keyword, type: 21
Token returned: 22, next token type: 21
Advanced to: 20 and 22
Parsing function arguments
Advancing tokens from: 20 and 22
Getting token, current type: 21
Getting next token at position: 104
Found keyword, type: 21
Token returned: 21, next token type: 21
Advanced to: 22 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 5
Advancing tokens from: 22 and 21
Getting token, current type: 21
Getting next token at position: 105
Found keyword, type: 34
Token returned: 21, next token type: 34
Advanced to: 21 and 21
Advancing tokens from: 21 and 21
Getting token, current type: 34
Getting next token at position: 110
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 21 and 34
Arguments parsing completed
Advancing tokens from: 21 and 34
Getting token, current type: 20
Getting next token at position: 111
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Arguments parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 114
Found keyword, type: 36
Token returned: 26, next token type: 36
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 36
Getting next token at position: 115
Found number literal
Finding number
Parsed number: 3
Token returned: 36, next token type: 22
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Getting token, current type: 22
Getting next token at position: 116
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 117
Found keyword, type: 36
Token returned: 37, next token type: 36
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 37
Getting token, current type: 36
Getting next token at position: 118
Found number literal
Finding number
Parsed number: 2
Token returned: 36, next token type: 22
Advanced to: 37 and 36
Advancing tokens from: 37 and 36
Getting token, current type: 22
Getting next token at position: 119
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 120
Found keyword, type: 21
Token returned: 37, next token type: 21
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 37
Getting token, current type: 21
Getting next token at position: 121
Found keyword, type: 34
Token returned: 21, next token type: 34
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Getting token, current type: 34
Getting next token at position: 126
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 21 and 34
Advancing tokens from: 21 and 34
Getting token, current type: 20
Getting next token at position: 127
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Arguments parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 130
Found keyword, type: 36
Token returned: 26, next token type: 36
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 36
Getting next token at position: 131
Found number literal
Finding number
Parsed number: 4
Token returned: 36, next token type: 22
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Getting token, current type: 22
Getting next token at position: 132
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 133
Found keyword, type: 21
Token returned: 37, next token type: 21
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 4
Advancing tokens from: 22 and 37
Getting token, current type: 21
Getting next token at position: 134
No valid token found
Token returned: 21, next token type: 24
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Getting token, current type: 24
Invalid token at position: 134
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Getting token, current type: 24
Invalid token at position: 134
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Creating array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Creating function closure
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Creating array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Assigning to identifier: arr
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Assigning to identifier: f
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing function call: f
Function resolved, preparing to invoke
Processing argument: x
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Processing return statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: x
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding doubles: 5 + 1
Binary operation result type: struct Object
Operation completed
Function returned
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: arr
Advancing tokens from: 26 and 30
Getting token, current type: 36
Getting next token at position: 5
Found number literal
Finding number
Parsed number: 1
Token returned: 36, next token type: 22
Advanced to: 30 and 36
Parsing simple assignment
Advancing tokens from: 30 and 36
Getting token, current type: 22
Getting next token at position: 6
Found keyword, type: 32
Token returned: 22, next token type: 32
Advanced to: 36 and 22
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 36
Parsing array literal
Advancing tokens from: 36 and 22
Getting token, current type: 32
Getting next token at position: 7
Found number literal
Finding number
Parsed number: 2
Token returned: 32, next token type: 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 32
Getting token, current type: 22
Getting next token at position: 8
Found keyword, type: 32
Token returned: 22, next token type: 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Getting token, current type: 32
Getting next token at position: 9
Found number literal
Finding number
Parsed number: 3
Token returned: 32, next token type: 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 32
Getting token, current type: 22
Getting next token at position: 10
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Getting token, current type: 37
Getting next token at position: 11
Found identifier
Token returned: 37, next token type: 26
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 37
Getting token, current type: 26
Getting next token at position: 14
Found keyword, type: 36
Token returned: 26, next token type: 36
Advanced to: 37 and 26
Advancing tokens from: 37 and 26
Getting token, current type: 36
Getting next token at position: 15
Found number literal
Finding number
Parsed number: 1
Token returned: 36, next token type: 22
Advanced to: 26 and 36
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 36
Attempting to parse assignment
Processing identifier: arr
Advancing tokens from: 26 and 36
Getting token, current type: 22
Getting next token at position: 16
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Parsing array assignment
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 17
Found keyword, type: 30
Token returned: 37, next token type: 30
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 37
Getting token, current type: 30
Getting next token at position: 18
Found string literal
Token returned: 30, next token type: 23
Advanced to: 37 and 30
Advancing tokens from: 37 and 30
Getting token, current type: 23
Getting next token at position: 28
Found keyword, type: 34
Token returned: 23, next token type: 34
Advanced to: 30 and 23
Advancing tokens from: 30 and 23
Getting token, current type: 34
Getting next token at position: 33
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 23 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 34
Getting token, current type: 20
Getting next token at position: 34
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 37
Found keyword, type: 36
Token returned: 26, next token type: 36
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 36
Getting next token at position: 38
Found number literal
Finding number
Parsed number: 0
Token returned: 36, next token type: 22
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Getting token, current type: 22
Getting next token at position: 39
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 40
Found keyword, type: 21
Token returned: 37, next token type: 21
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 37
Getting token, current type: 21
Getting next token at position: 41
Found keyword, type: 34
Token returned: 21, next token type: 34
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Getting token, current type: 34
Getting next token at position: 46
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 21 and 34
Advancing tokens from: 21 and 34
Getting token, current type: 20
Getting next token at position: 47
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Arguments parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 50
Found keyword, type: 36
Token returned: 26, next token type: 36
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 36
Getting next token at position: 51
Found number literal
Finding number
Parsed number: 1
Token returned: 36, next token type: 22
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Getting token, current type: 22
Getting next token at position: 52
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 53
Found keyword, type: 21
Token returned: 37, next token type: 21
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 37
Getting token, current type: 21
Getting next token at position: 54
Found keyword, type: 34
Token returned: 21, next token type: 34
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Getting token, current type: 34
Getting next token at position: 59
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 21 and 34
Advancing tokens from: 21 and 34
Getting token, current type: 20
Getting next token at position: 60
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Arguments parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 63
Found keyword, type: 36
Token returned: 26, next token type: 36
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 36
Getting next token at position: 64
Found number literal
Finding number
Parsed number: 2
Token returned: 36, next token type: 22
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Getting token, current type: 22
Getting next token at position: 65
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 66
Found keyword, type: 21
Token returned: 37, next token type: 21
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 37
Getting token, current type: 21
Getting next token at position: 67
No valid token found
Token returned: 21, next token type: 24
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Getting token, current type: 24
Invalid token at position: 67
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Getting token, current type: 24
Invalid token at position: 67
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Creating array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Assigning to identifier: arr
Evaluating statement
Assigning to array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: arr
Advancing tokens from: 26 and 30
Getting token, current type: 36
Getting next token at position: 5
Found keyword, type: 36
Token returned: 36, next token type: 36
Advanced to: 30 and 36
Parsing simple assignment
Advancing tokens from: 30 and 36
Getting token, current type: 36
Getting next token at position: 6
Found number literal
Finding number
Parsed number: 1
Token returned: 36, next token type: 22
Advanced to: 36 and 36
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 36
Parsing array literal
Advancing tokens from: 36 and 36
Getting token, current type: 22
Getting next token at position: 7
Found keyword, type: 32
Token returned: 22, next token type: 32
Advanced to: 36 and 22
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 36
Parsing array literal
Advancing tokens from: 36 and 22
Getting token, current type: 32
Getting next token at position: 8
Found number literal
Finding number
Parsed number: 2
Token returned: 32, next token type: 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 32
Getting token, current type: 22
Getting next token at position: 9
Found keyword, type: 32
Token returned: 22, next token type: 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Getting token, current type: 32
Getting next token at position: 10
Found number literal
Finding number
Parsed number: 3
Token returned: 32, next token type: 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 32
Getting token, current type: 22
Getting next token at position: 11
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Getting token, current type: 37
Getting next token at position: 12
Found keyword, type: 32
Token returned: 37, next token type: 32
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 37
Getting token, current type: 32
Getting next token at position: 13
Found keyword, type: 36
Token returned: 32, next token type: 36
Advanced to: 37 and 32
Advancing tokens from: 37 and 32
Getting token, current type: 36
Getting next token at position: 14
Found number literal
Finding number
Parsed number: 4
Token returned: 36, next token type: 22
Advanced to: 32 and 36
Advancing tokens from: 32 and 36
Getting token, current type: 22
Getting next token at position: 15
Found keyword, type: 32
Token returned: 22, next token type: 32
Advanced to: 36 and 22
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 36
Parsing array literal
Advancing tokens from: 36 and 22
Getting token, current type: 32
Getting next token at position: 16
Found number literal
Finding number
Parsed number: 5
Token returned: 32, next token type: 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 4
Advancing tokens from: 22 and 32
Getting token, current type: 22
Getting next token at position: 17
Found keyword, type: 32
Token returned: 22, next token type: 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Getting token, current type: 32
Getting next token at position: 18
Found number literal
Finding number
Parsed number: 6
Token returned: 32, next token type: 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 5
Advancing tokens from: 22 and 32
Getting token, current type: 22
Getting next token at position: 19
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Getting token, current type: 37
Getting next token at position: 20
Found keyword, type: 32
Token returned: 37, next token type: 32
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 6
Advancing tokens from: 22 and 37
Getting token, current type: 32
Getting next token at position: 21
Found keyword, type: 36
Token returned: 32, next token type: 36
Advanced to: 37 and 32
Advancing tokens from: 37 and 32
Getting token, current type: 36
Getting next token at position: 22
Found number literal
Finding number
Parsed number: 7
Token returned: 36, next token type: 22
Advanced to: 32 and 36
Advancing tokens from: 32 and 36
Getting token, current type: 22
Getting next token at position: 23
Found keyword, type: 32
Token returned: 22, next token type: 32
Advanced to: 36 and 22
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 36
Parsing array literal
Advancing tokens from: 36 and 22
Getting token, current type: 32
Getting next token at position: 24
Found number literal
Finding number
Parsed number: 8
Token returned: 32, next token type: 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 7
Advancing tokens from: 22 and 32
Getting token, current type: 22
Getting next token at position: 25
Found keyword, type: 32
Token returned: 22, next token type: 32
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Getting token, current type: 32
Getting next token at position: 26
Found number literal
Finding number
Parsed number: 9
Token returned: 32, next token type: 22
Advanced to: 22 and 32
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 8
Advancing tokens from: 22 and 32
Getting token, current type: 22
Getting next token at position: 27
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 32 and 22
Advancing tokens from: 32 and 22
Getting token, current type: 37
Getting next token at position: 28
Found keyword, type: 37
Token returned: 37, next token type: 37
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 9
Advancing tokens from: 22 and 37
Getting token, current type: 37
Getting next token at position: 29
Found identifier
Token returned: 37, next token type: 26
Advanced to: 37 and 37
Advancing tokens from: 37 and 37
Getting token, current type: 26
Getting next token at position: 32
Found keyword, type: 36
Token returned: 26, next token type: 36
Advanced to: 37 and 26
Advancing tokens from: 37 and 26
Getting token, current type: 36
Getting next token at position: 33
Found number literal
Finding number
Parsed number: 1
Token returned: 36, next token type: 22
Advanced to: 26 and 36
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 36
Attempting to parse assignment
Processing identifier: arr
Advancing tokens from: 26 and 36
Getting token, current type: 22
Getting next token at position: 34
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Parsing array assignment
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 35
Found keyword, type: 36
Token returned: 37, next token type: 36
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 37
Getting token, current type: 36
Getting next token at position: 36
Found number literal
Finding number
Parsed number: 1
Token returned: 36, next token type: 22
Advanced to: 37 and 36
Advancing tokens from: 37 and 36
Getting token, current type: 22
Getting next token at position: 37
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 38
Found keyword, type: 30
Token returned: 37, next token type: 30
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 37
Getting token, current type: 30
Getting next token at position: 39
Found string literal
Token returned: 30, next token type: 23
Advanced to: 37 and 30
Advancing tokens from: 37 and 30
Getting token, current type: 23
Getting next token at position: 49
Found keyword, type: 34
Token returned: 23, next token type: 34
Advanced to: 30 and 23
Advancing tokens from: 30 and 23
Getting token, current type: 34
Getting next token at position: 54
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 23 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 34
Getting token, current type: 20
Getting next token at position: 55
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 58
Found keyword, type: 36
Token returned: 26, next token type: 36
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 36
Getting next token at position: 59
Found number literal
Finding number
Parsed number: 0
Token returned: 36, next token type: 22
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Getting token, current type: 22
Getting next token at position: 60
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 61
Found keyword, type: 36
Token returned: 37, next token type: 36
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 37
Getting token, current type: 36
Getting next token at position: 62
Found number literal
Finding number
Parsed number: 0
Token returned: 36, next token type: 22
Advanced to: 37 and 36
Advancing tokens from: 37 and 36
Getting token, current type: 22
Getting next token at position: 63
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 64
Found keyword, type: 21
Token returned: 37, next token type: 21
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 37
Getting token, current type: 21
Getting next token at position: 65
Found keyword, type: 34
Token returned: 21, next token type: 34
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Getting token, current type: 34
Getting next token at position: 70
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 21 and 34
Advancing tokens from: 21 and 34
Getting token, current type: 20
Getting next token at position: 71
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Arguments parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 74
Found keyword, type: 36
Token returned: 26, next token type: 36
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 36
Getting next token at position: 75
Found number literal
Finding number
Parsed number: 1
Token returned: 36, next token type: 22
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Getting token, current type: 22
Getting next token at position: 76
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 77
Found keyword, type: 36
Token returned: 37, next token type: 36
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 37
Getting token, current type: 36
Getting next token at position: 78
Found number literal
Finding number
Parsed number: 1
Token returned: 36, next token type: 22
Advanced to: 37 and 36
Advancing tokens from: 37 and 36
Getting token, current type: 22
Getting next token at position: 79
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 80
Found keyword, type: 21
Token returned: 37, next token type: 21
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 37
Getting token, current type: 21
Getting next token at position: 81
Found keyword, type: 34
Token returned: 21, next token type: 34
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Getting token, current type: 34
Getting next token at position: 86
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 21 and 34
Advancing tokens from: 21 and 34
Getting token, current type: 20
Getting next token at position: 87
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Arguments parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 90
Found keyword, type: 36
Token returned: 26, next token type: 36
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 36
Getting next token at position: 91
Found number literal
Finding number
Parsed number: 2
Token returned: 36, next token type: 22
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Getting token, current type: 22
Getting next token at position: 92
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 93
Found keyword, type: 36
Token returned: 37, next token type: 36
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 37
Getting token, current type: 36
Getting next token at position: 94
Found number literal
Finding number
Parsed number: 2
Token returned: 36, next token type: 22
Advanced to: 37 and 36
Advancing tokens from: 37 and 36
Getting token, current type: 22
Getting next token at position: 95
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 96
Found keyword, type: 21
Token returned: 37, next token type: 21
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 37
Getting token, current type: 21
Getting next token at position: 97
Found identifier
Token returned: 21, next token type: 26
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Getting token, current type: 26
Getting next token at position: 100
Found keyword, type: 36
Token returned: 26, next token type: 36
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Getting token, current type: 36
Getting next token at position: 101
Found number literal
Finding number
Parsed number: 0
Token returned: 36, next token type: 22
Advanced to: 26 and 36
Arguments parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 36
Attempting to parse assignment
Processing identifier: arr
Advancing tokens from: 26 and 36
Getting token, current type: 22
Getting next token at position: 102
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Parsing array assignment
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 103
Found keyword, type: 36
Token returned: 37, next token type: 36
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 37
Getting token, current type: 36
Getting next token at position: 104
Found number literal
Finding number
Parsed number: 2
Token returned: 36, next token type: 22
Advanced to: 37 and 36
Advancing tokens from: 37 and 36
Getting token, current type: 22
Getting next token at position: 105
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 106
Found keyword, type: 30
Token returned: 37, next token type: 30
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 37
Getting token, current type: 30
Getting next token at position: 107
Found string literal
Token returned: 30, next token type: 23
Advanced to: 37 and 30
Advancing tokens from: 37 and 30
Getting token, current type: 23
Getting next token at position: 116
Found keyword, type: 34
Token returned: 23, next token type: 34
Advanced to: 30 and 23
Advancing tokens from: 30 and 23
Getting token, current type: 34
Getting next token at position: 121
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 23 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 34
Getting token, current type: 20
Getting next token at position: 122
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 125
Found keyword, type: 36
Token returned: 26, next token type: 36
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 36
Getting next token at position: 126
Found number literal
Finding number
Parsed number: 0
Token returned: 36, next token type: 22
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Getting token, current type: 22
Getting next token at position: 127
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 128
Found keyword, type: 36
Token returned: 37, next token type: 36
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 0
Advancing tokens from: 22 and 37
Getting token, current type: 36
Getting next token at position: 129
Found number literal
Finding number
Parsed number: 2
Token returned: 36, next token type: 22
Advanced to: 37 and 36
Advancing tokens from: 37 and 36
Getting token, current type: 22
Getting next token at position: 130
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 131
Found keyword, type: 21
Token returned: 37, next token type: 21
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 37
Getting token, current type: 21
Getting next token at position: 132
Found keyword, type: 34
Token returned: 21, next token type: 34
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Getting token, current type: 34
Getting next token at position: 137
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 21 and 34
Advancing tokens from: 21 and 34
Getting token, current type: 20
Getting next token at position: 138
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Arguments parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 141
Found keyword, type: 36
Token returned: 26, next token type: 36
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 36
Getting next token at position: 142
Found number literal
Finding number
Parsed number: 1
Token returned: 36, next token type: 22
Advanced to: 26 and 36
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing array access
Advancing tokens from: 26 and 36
Getting token, current type: 22
Getting next token at position: 143
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 144
Found keyword, type: 36
Token returned: 37, next token type: 36
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 37
Getting token, current type: 36
Getting next token at position: 145
Found number literal
Finding number
Parsed number: 2
Token returned: 36, next token type: 22
Advanced to: 37 and 36
Advancing tokens from: 37 and 36
Getting token, current type: 22
Getting next token at position: 146
Found keyword, type: 37
Token returned: 22, next token type: 37
Advanced to: 36 and 22
Advancing tokens from: 36 and 22
Getting token, current type: 37
Getting next token at position: 147
Found keyword, type: 21
Token returned: 37, next token type: 21
Advanced to: 22 and 37
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 37
Getting token, current type: 21
Getting next token at position: 148
No valid token found
Token returned: 21, next token type: 24
Advanced to: 37 and 21
Advancing tokens from: 37 and 21
Getting token, current type: 24
Invalid token at position: 148
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Getting token, current type: 24
Invalid token at position: 148
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Creating array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Creating array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Creating array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Creating array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Assigning to identifier: arr
Evaluating statement
Assigning to array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Assigning to array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Accessing array
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 22
Getting next token at position: 10
Found keyword, type: 21
Token returned: 22, next token type: 21
Advanced to: 20 and 22
Parsing function arguments
Advancing tokens from: 20 and 22
Getting token, current type: 21
Getting next token at position: 11
Found keyword, type: 34
Token returned: 21, next token type: 34
Advanced to: 22 and 21
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1e30
Advancing tokens from: 22 and 21
Getting token, current type: 34
Getting next token at position: 16
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 21 and 34
Advancing tokens from: 21 and 34
Getting token, current type: 20
Getting next token at position: 17
Found number literal
Finding number
Parsed number: 1
Token returned: 20, next token type: 22
Advanced to: 34 and 20
Arguments parsing completed
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 22
Getting next token at position: 18
Found new identifier
Token returned: 22, next token type: 26
Advanced to: 20 and 22
Parsing function arguments
Advancing tokens from: 20 and 22
Getting token, current type: 26
Getting next token at position: 19
Found keyword, type: 8
Token returned: 26, next token type: 8
Advanced to: 22 and 26
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 1
Advancing tokens from: 22 and 26
Getting token, current type: 8
Getting next token at position: 20
Found number literal
Finding number
Finding number
Parsed number: 30
Token returned: 8, next token type: 22
Advanced to: 26 and 8
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: e
Advancing tokens from: 26 and 8
Getting token, current type: 22
Getting next token at position: 22
Found keyword, type: 21
Token returned: 22, next token type: 21
Advanced to: 8 and 22
Advancing tokens from: 8 and 22
Getting token, current type: 21
Getting next token at position: 23
No valid token found
Token returned: 21, next token type: 24
Advanced to: 22 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 30
Advancing tokens from: 22 and 21
Getting token, current type: 24
Invalid token at position: 23
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Getting token, current type: 24
Invalid token at position: 23
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: aboba
Advancing tokens from: 26 and 30
Getting token, current type: 23
Getting next token at position: 13
Found keyword, type: 34
Token returned: 23, next token type: 34
Advanced to: 30 and 23
Parsing simple assignment
Advancing tokens from: 30 and 23
Getting token, current type: 34
Getting next token at position: 18
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 23 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 34
Getting token, current type: 20
Getting next token at position: 19
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 24
Found keyword, type: 7
Token returned: 26, next token type: 7
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 7
Getting next token at position: 25
Found string literal
Token returned: 7, next token type: 23
Advanced to: 26 and 7
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: aboba
Advancing tokens from: 26 and 7
Getting token, current type: 23
Getting next token at position: 33
Found keyword, type: 21
Token returned: 23, next token type: 21
Advanced to: 7 and 23
Advancing tokens from: 7 and 23
Getting token, current type: 21
Getting next token at position: 34
No valid token found
Token returned: 21, next token type: 24
Advanced to: 23 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 21
Getting token, current type: 24
Invalid token at position: 34
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Getting token, current type: 24
Invalid token at position: 34
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Assigning to identifier: aboba
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: aboba
First operand evaluated
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding strings: aboba + amogus
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: aboba
Advancing tokens from: 26 and 30
Getting token, current type: 23
Getting next token at position: 13
Found keyword, type: 34
Token returned: 23, next token type: 34
Advanced to: 30 and 23
Parsing simple assignment
Advancing tokens from: 30 and 23
Getting token, current type: 34
Getting next token at position: 18
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 23 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 34
Getting token, current type: 20
Getting next token at position: 19
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 24
Found keyword, type: 9
Token returned: 26, next token type: 9
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 9
Getting next token at position: 25
Found number literal
Finding number
Parsed number: 3
Token returned: 9, next token type: 22
Advanced to: 26 and 9
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: aboba
Advancing tokens from: 26 and 9
Getting token, current type: 22
Getting next token at position: 26
Found keyword, type: 21
Token returned: 22, next token type: 21
Advanced to: 9 and 22
Advancing tokens from: 9 and 22
Getting token, current type: 21
Getting next token at position: 27
No valid token found
Token returned: 21, next token type: 24
Advanced to: 22 and 21
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 3
Advancing tokens from: 22 and 21
Getting token, current type: 24
Invalid token at position: 27
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Getting token, current type: 24
Invalid token at position: 27
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Assigning to identifier: aboba
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: aboba
First operand evaluated
Processing operator: 9
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
Executing binary operator: 9
Operand types: struct Object and struct Object
Multiplying types: struct Object and struct Object
Multiplying string by double: aboba * 3
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: str1
Advancing tokens from: 26 and 30
Getting token, current type: 23
Getting next token at position: 17
Found new identifier
Token returned: 23, next token type: 26
Advanced to: 30 and 23
Parsing simple assignment
Advancing tokens from: 30 and 23
Getting token, current type: 26
Getting next token at position: 21
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 23 and 26
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 26
Getting token, current type: 30
Getting next token at position: 22
Found string literal
Token returned: 30, next token type: 23
Advanced to: 26 and 30
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: str2
Advancing tokens from: 26 and 30
Getting token, current type: 23
Getting next token at position: 29
Found keyword, type: 34
Token returned: 23, next token type: 34
Advanced to: 30 and 23
Parsing simple assignment
Advancing tokens from: 30 and 23
Getting token, current type: 34
Getting next token at position: 34
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 23 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 34
Getting token, current type: 20
Getting next token at position: 35
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 39
Found keyword, type: 8
Token returned: 26, next token type: 8
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 8
Getting next token at position: 40
Found identifier
Token returned: 8, next token type: 26
Advanced to: 26 and 8
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: str1
Advancing tokens from: 26 and 8
Getting token, current type: 26
Getting next token at position: 44
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 8 and 26
Advancing tokens from: 8 and 26
Getting token, current type: 21
Getting next token at position: 45
Found new identifier
Token returned: 21, next token type: 26
Advanced to: 26 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: str2
Advancing tokens from: 26 and 21
Getting token, current type: 26
Getting next token at position: 49
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 21 and 26
Advancing tokens from: 21 and 26
Getting token, current type: 30
Getting next token at position: 50
Found string literal
Token returned: 30, next token type: 23
Advanced to: 26 and 30
Arguments parsing completed
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: str3
Advancing tokens from: 26 and 30
Getting token, current type: 23
Getting next token at position: 59
Found new identifier
Token returned: 23, next token type: 26
Advanced to: 30 and 23
Parsing simple assignment
Advancing tokens from: 30 and 23
Getting token, current type: 26
Getting next token at position: 63
Found keyword, type: 30
Token returned: 26, next token type: 30
Advanced to: 23 and 26
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 26
Getting token, current type: 30
Getting next token at position: 64
Found string literal
Token returned: 30, next token type: 23
Advanced to: 26 and 30
Statement parsed, current token: 26
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: str4
Advancing tokens from: 26 and 30
Getting token, current type: 23
Getting next token at position: 69
Found keyword, type: 34
Token returned: 23, next token type: 34
Advanced to: 30 and 23
Parsing simple assignment
Advancing tokens from: 30 and 23
Getting token, current type: 34
Getting next token at position: 74
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 23 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 34
Getting token, current type: 20
Getting next token at position: 75
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 79
Found keyword, type: 8
Token returned: 26, next token type: 8
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 8
Getting next token at position: 80
Found identifier
Token returned: 8, next token type: 26
Advanced to: 26 and 8
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: str3
Advancing tokens from: 26 and 8
Getting token, current type: 26
Getting next token at position: 84
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 8 and 26
Advancing tokens from: 8 and 26
Getting token, current type: 21
Getting next token at position: 85
No valid token found
Token returned: 21, next token type: 24
Advanced to: 26 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: str4
Advancing tokens from: 26 and 21
Getting token, current type: 24
Invalid token at position: 85
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Getting token, current type: 24
Invalid token at position: 85
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Assigning to identifier: str1
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Assigning to identifier: str2
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: str1
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: str2
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Assigning to identifier: str3
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Assigning to identifier: str4
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: str3
First operand evaluated
First operand evaluated
Processing operator: 8
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: str4
First operand evaluated
Executing binary operator: 8
Operand types: struct Object and struct Object
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: str1
Advancing tokens from: 26 and 30
Getting token, current type: 23
Getting next token at position: 17
Found keyword, type: 34
Token returned: 23, next token type: 34
Advanced to: 30 and 23
Parsing simple assignment
Advancing tokens from: 30 and 23
Getting token, current type: 34
Getting next token at position: 22
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 23 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 34
Getting token, current type: 20
Getting next token at position: 23
Found identifier
Token returned: 20, next token type: 26
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 26
Getting next token at position: 27
Found keyword, type: 10
Token returned: 26, next token type: 10
Advanced to: 20 and 26
Parsing function arguments
Advancing tokens from: 20 and 26
Getting token, current type: 10
Getting next token at position: 28
Found number literal
Finding number
Parsed number: 2
Token returned: 10, next token type: 22
Advanced to: 26 and 10
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 26
Parsing identifier: str1
Advancing tokens from: 26 and 10
Getting token, current type: 22
Getting next token at position: 29
Found keyword, type: 21
Token returned: 22, next token type: 21
Advanced to: 10 and 22
Advancing tokens from: 10 and 22
Getting token, current type: 21
Getting next token at position: 30
No valid token found
Token returned: 21, next token type: 24
Advanced to: 22 and 21
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 21
Getting token, current type: 24
Invalid token at position: 30
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Getting token, current type: 24
Invalid token at position: 30
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Assigning to identifier: str1
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: str1
First operand evaluated
Processing operator: 10
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
Executing binary operator: 10
Operand types: struct Object and struct Object
Dividing types: struct Object and struct Object
Dividing string by double: helloworld / 2
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: str1
Advancing tokens from: 26 and 30
Getting token, current type: 23
Getting next token at position: 17
Found keyword, type: 34
Token returned: 23, next token type: 34
Advanced to: 30 and 23
Parsing simple assignment
Advancing tokens from: 30 and 23
Getting token, current type: 34
Getting next token at position: 22
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 23 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 34
Getting token, current type: 20
Getting next token at position: 23
Found keyword, type: 8
Token returned: 20, next token type: 8
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 8
Getting next token at position: 24
Found identifier
Token returned: 8, next token type: 26
Advanced to: 20 and 8
Parsing function arguments
Advancing tokens from: 20 and 8
Getting token, current type: 26
Getting next token at position: 28
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 8 and 26
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Found prefix operator
Advancing tokens from: 8 and 26
Getting token, current type: 21
Getting next token at position: 29
No valid token found
Token returned: 21, next token type: 24
Advanced to: 26 and 21
Parsing expression at level 0, token type: 26
Parsing identifier: str1
Advancing tokens from: 26 and 21
Getting token, current type: 24
Invalid token at position: 29
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Getting token, current type: 24
Invalid token at position: 29
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Assigning to identifier: str1
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: str1
Applying prefix operator: 8
Executing unary operator: 8
Operand type: struct Object
Unary minus on type: struct Object
Reversing string: helloworld
Reversed string: dlrowolleh
Unary minus result index: 1
Unary operation result type: struct Object
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: str1
Advancing tokens from: 26 and 30
Getting token, current type: 23
Getting next token at position: 17
Found keyword, type: 34
Token returned: 23, next token type: 34
Advanced to: 30 and 23
Parsing simple assignment
Advancing tokens from: 30 and 23
Getting token, current type: 34
Getting next token at position: 22
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 23 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 34
Getting token, current type: 20
Getting next token at position: 23
Found keyword, type: 8
Token returned: 20, next token type: 8
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 8
Getting next token at position: 24
Found keyword, type: 20
Token returned: 8, next token type: 20
Advanced to: 20 and 8
Parsing function arguments
Advancing tokens from: 20 and 8
Getting token, current type: 20
Getting next token at position: 25
Found keyword, type: 8
Token returned: 20, next token type: 8
Advanced to: 8 and 20
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Found prefix operator
Advancing tokens from: 8 and 20
Getting token, current type: 8
Getting next token at position: 26
Found identifier
Token returned: 8, next token type: 26
Advanced to: 20 and 8
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 8
Getting token, current type: 26
Getting next token at position: 30
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 8 and 26
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Found prefix operator
Advancing tokens from: 8 and 26
Getting token, current type: 21
Getting next token at position: 31
Found keyword, type: 21
Token returned: 21, next token type: 21
Advanced to: 26 and 21
Parsing expression at level 0, token type: 26
Parsing identifier: str1
Advancing tokens from: 26 and 21
Getting token, current type: 21
Getting next token at position: 32
No valid token found
Token returned: 21, next token type: 24
Advanced to: 21 and 21
Advancing tokens from: 21 and 21
Getting token, current type: 24
Invalid token at position: 32
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Getting token, current type: 24
Invalid token at position: 32
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Assigning to identifier: str1
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: str1
Applying prefix operator: 8
Executing unary operator: 8
Operand type: struct Object
Unary minus on type: struct Object
Reversing string: helloworld
Reversed string: dlrowolleh
Unary minus result index: 1
Unary operation result type: struct Object
First operand evaluated
First operand evaluated
Applying prefix operator: 8
Executing unary operator: 8
Operand type: struct Object
Unary minus on type: struct Object
Reversing string: dlrowolleh
Reversed string: helloworld
Unary minus result index: 1
Unary operation result type: struct Object
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 26, peek token: 30
Attempting to parse assignment
Processing identifier: str1
Advancing tokens from: 26 and 30
Getting token, current type: 23
Getting next token at position: 17
Found keyword, type: 34
Token returned: 23, next token type: 34
Advanced to: 30 and 23
Parsing simple assignment
Advancing tokens from: 30 and 23
Getting token, current type: 34
Getting next token at position: 22
Found keyword, type: 20
Token returned: 34, next token type: 20
Advanced to: 23 and 34
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 34
Getting token, current type: 20
Getting next token at position: 23
Found keyword, type: 8
Token returned: 20, next token type: 8
Advanced to: 34 and 20
Statement parsed, current token: 34
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 8
Getting next token at position: 24
Found keyword, type: 20
Token returned: 8, next token type: 20
Advanced to: 20 and 8
Parsing function arguments
Advancing tokens from: 20 and 8
Getting token, current type: 20
Getting next token at position: 25
Found keyword, type: 8
Token returned: 20, next token type: 8
Advanced to: 8 and 20
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Found prefix operator
Advancing tokens from: 8 and 20
Getting token, current type: 8
Getting next token at position: 26
Found keyword, type: 20
Token returned: 8, next token type: 20
Advanced to: 20 and 8
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 8
Getting token, current type: 20
Getting next token at position: 27
Found keyword, type: 8
Token returned: 20, next token type: 8
Advanced to: 8 and 20
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Found prefix operator
Advancing tokens from: 8 and 20
Getting token, current type: 8
Getting next token at position: 28
Found identifier
Token returned: 8, next token type: 26
Advanced to: 20 and 8
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 8
Getting token, current type: 26
Getting next token at position: 32
Found keyword, type: 21
Token returned: 26, next token type: 21
Advanced to: 8 and 26
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Found prefix operator
Advancing tokens from: 8 and 26
Getting token, current type: 21
Getting next token at position: 33
Found keyword, type: 21
Token returned: 21, next token type: 21
Advanced to: 26 and 21
Parsing expression at level 0, token type: 26
Parsing identifier: str1
Advancing tokens from: 26 and 21
Getting token, current type: 21
Getting next token at position: 34
Found keyword, type: 21
Token returned: 21, next token type: 21
Advanced to: 21 and 21
Advancing tokens from: 21 and 21
Getting token, current type: 21
Getting next token at position: 35
No valid token found
Token returned: 21, next token type: 24
Advanced to: 21 and 21
Advancing tokens from: 21 and 21
Getting token, current type: 24
Invalid token at position: 35
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Getting token, current type: 24
Invalid token at position: 35
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Processing assignment
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
First operand evaluated
Assigning to identifier: str1
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating identifier: str1
Applying prefix operator: 8
Executing unary operator: 8
Operand type: struct Object
Unary minus on type: struct Object
Reversing string: helloworld
Reversed string: dlrowolleh
Unary minus result index: 1
Unary operation result type: struct Object
First operand evaluated
First operand evaluated
Applying prefix operator: 8
Executing unary operator: 8
Operand type: struct Object
Unary minus on type: struct Object
Reversing string: dlrowolleh
Reversed string: helloworld
Unary minus result index: 1
Unary operation result type: struct Object
First operand evaluated
First operand evaluated
Applying prefix operator: 8
Executing unary operator: 8
Operand type: struct Object
Unary minus on type: struct Object
Reversing string: helloworld
Reversed string: dlrowolleh
Unary minus result index: 1
Unary operation result type: struct Object
First operand evaluated
First operand evaluated
First operand evaluated
First operand evaluated
Debug mode enabled - logging to console and file: interpreter.log
Interpreter constructed
Starting program parsing
Starting program parsing
Parsing next statement
Parsing statement, current token: 34, peek token: 20
Attempting to parse assignment
Not an identifier, parsing as expression statement
Parsing expression statement
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 34
Parsing function call
Advancing tokens from: 34 and 20
Getting token, current type: 8
Getting next token at position: 7
Found keyword, type: 20
Token returned: 8, next token type: 20
Advanced to: 20 and 8
Parsing function arguments
Advancing tokens from: 20 and 8
Getting token, current type: 20
Getting next token at position: 8
Found string literal
Token returned: 20, next token type: 23
Advanced to: 8 and 20
Parsing next argument
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Found prefix operator
Advancing tokens from: 8 and 20
Getting token, current type: 23
Getting next token at position: 14
Found keyword, type: 9
Token returned: 23, next token type: 9
Advanced to: 20 and 23
Parsing expression at level 0, token type: 20
Parsing parenthesized expression
Advancing tokens from: 20 and 23
Getting token, current type: 9
Getting next token at position: 15
Found number literal
Finding number
Parsed number: 4
Token returned: 9, next token type: 22
Advanced to: 23 and 9
Parsing expression
Parsing expression at level 3
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 9
Getting token, current type: 22
Getting next token at position: 16
Found keyword, type: 21
Token returned: 22, next token type: 21
Advanced to: 9 and 22
Advancing tokens from: 9 and 22
Getting token, current type: 21
Getting next token at position: 17
Found keyword, type: 10
Token returned: 21, next token type: 10
Advanced to: 22 and 21
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 4
Advancing tokens from: 22 and 21
Getting token, current type: 10
Getting next token at position: 18
Found number literal
Finding number
Parsed number: 2
Token returned: 10, next token type: 22
Advanced to: 21 and 10
Advancing tokens from: 21 and 10
Getting token, current type: 22
Getting next token at position: 19
Found keyword, type: 7
Token returned: 22, next token type: 7
Advanced to: 10 and 22
Advancing tokens from: 10 and 22
Getting token, current type: 7
Getting next token at position: 20
Found string literal
Token returned: 7, next token type: 23
Advanced to: 22 and 7
Parsing expression at level 1
Parsing expression at level 0, token type: 22
Parsing integer literal: 2
Advancing tokens from: 22 and 7
Getting token, current type: 23
Getting next token at position: 26
Found keyword, type: 21
Token returned: 23, next token type: 21
Advanced to: 7 and 23
Advancing tokens from: 7 and 23
Getting token, current type: 21
Getting next token at position: 27
No valid token found
Token returned: 21, next token type: 24
Advanced to: 23 and 21
Parsing expression at level 2
Parsing expression at level 1
Parsing expression at level 0, token type: 23
Parsing string literal
Advancing tokens from: 23 and 21
Getting token, current type: 24
Invalid token at position: 27
Advanced to: 21 and 24
Advancing tokens from: 21 and 24
Getting token, current type: 24
Invalid token at position: 27
Advanced to: 24 and 24
Arguments parsing completed
Statement parsed, current token: 24
Program parsing completed
Evaluating statement
Evaluating expression statement
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Executing standard function
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating scoped expression
Evaluating expression at level 3
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
Processing operator: 9
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
Executing binary operator: 9
Operand types: struct Object and struct Object
Multiplying types: struct Object and struct Object
Multiplying string by double: hola * 4
Binary operation result type: struct Object
Operation completed
First operand evaluated
Applying prefix operator: 8
Executing unary operator: 8
Operand type: struct Object
Unary minus on type: struct Object
Reversing string: holaholaholahola
Reversed string: alohalohalohaloh
Unary minus result index: 1
Unary operation result type: struct Object
First operand evaluated
Processing operator: 10
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating integer literal
Executing binary operator: 10
Operand types: struct Object and struct Object
Dividing types: struct Object and struct Object
Dividing string by double: alohalohalohaloh / 2
Binary operation result type: struct Object
Operation completed
First operand evaluated
Processing operator: 7
Evaluating expression at level 2
Evaluating level 1 expression
Evaluating level 0 expression
Evaluating string literal
First operand evaluated
Executing binary operator: 7
Operand types: struct Object and struct Object
Adding types: struct Object and struct Object
Adding strings: alohaloh + test
Binary operation result type: struct Object
Operation completed
First operand evaluated
First operand evaluated
